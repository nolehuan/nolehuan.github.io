{"title":"nms","uid":"7e6b04d6ee5d3c39d64da1c68ae92e32","slug":"learning/nms","date":"2024-01-01T16:11:29.000Z","updated":"2024-01-01T08:14:11.449Z","comments":true,"path":"api/articles/learning/nms.json","cover":null,"content":"<h3 id=\"NMS\"><a href=\"#NMS\" class=\"headerlink\" title=\"NMS\"></a>NMS</h3><p>在目标检测网络中，产生 proposal 后使用分类分支给出每个框的每类置信度，使用回归分支修正框的位置，最终使用 NMS 去除同个类别中 IOU 重叠度较高且置信度较低的检测框</p>\n<ol>\n<li>将 BBox 按 Score 降序排列</li>\n<li>从 Score 最大值开始，保存当前 BBox，依次遍历其后的 BBox，计算与当前 BBox 的 IOU，大于阈值则抑制</li>\n<li>遍历一遍后，继续选择下一个非抑制 BBox 重复上述步骤</li>\n<li>返回没有被抑制的 BBox</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">NMS</span>(<span class=\"params\">bboxs, score, thresh</span>):</span><br><span class=\"line\">  x1 = bboxs[:, <span class=\"number\">0</span>]</span><br><span class=\"line\">  y1 = bboxs[:, <span class=\"number\">1</span>]</span><br><span class=\"line\">  x2 = bboxs[:, <span class=\"number\">2</span>]</span><br><span class=\"line\">  y2 = bboxs[:, <span class=\"number\">3</span>]</span><br><span class=\"line\">  n = bboxs.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">  area = (x2 - x1 + <span class=\"number\">1</span>) * (y2 - y1 + <span class=\"number\">1</span>)</span><br><span class=\"line\">  order = score.argsort()[::-<span class=\"number\">1</span>]</span><br><span class=\"line\">  keep = []</span><br><span class=\"line\">  suppressed = np.array([<span class=\"number\">0</span>] * n)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i_ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    i = order[i_]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> suppressed[i] == <span class=\"number\">1</span>:</span><br><span class=\"line\">      <span class=\"keyword\">continue</span></span><br><span class=\"line\">    keep.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j_ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i_ + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">      j = order[j_]</span><br><span class=\"line\">      <span class=\"keyword\">if</span> suppressed[j] == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">      x_tl = <span class=\"built_in\">max</span>(x1[i], x1[j])</span><br><span class=\"line\">      y_tl = <span class=\"built_in\">max</span>(y1[i], y1[j])</span><br><span class=\"line\">      x_br = <span class=\"built_in\">min</span>(x2[i], x2[j])</span><br><span class=\"line\">      y_br = <span class=\"built_in\">min</span>(y2[i], y2[j])</span><br><span class=\"line\">      w = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, x_br - x_tl + <span class=\"number\">1</span>)</span><br><span class=\"line\">      h = <span class=\"built_in\">max</span>(<span class=\"number\">0</span>, y_br - y_tl + <span class=\"number\">1</span>)</span><br><span class=\"line\">      intersection = w * h</span><br><span class=\"line\">      iou = intersection / (area[i] + area[j] - intersection)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> iou &gt;= thresh:</span><br><span class=\"line\">        suppressed[j] = <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> keep</span><br></pre></td></tr></table></figure>\n<h3 id=\"Soft-NMS\"><a href=\"#Soft-NMS\" class=\"headerlink\" title=\"Soft NMS\"></a>Soft NMS</h3><p>NMS 会直接删除 IOU 较大的两个真实目标中的一个，造成漏检</p>\n<p>SoftNMS 会对得分进行衰减</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">softNMS</span>(<span class=\"params\">bboxs, scores, Nt=<span class=\"number\">0.3</span>, sigma=<span class=\"number\">0.5</span>, thresh=<span class=\"number\">0.001</span>, method=<span class=\"number\">2</span></span>):</span><br><span class=\"line\">  n = bboxs.shape[<span class=\"number\">0</span>]</span><br><span class=\"line\">  x1 = bboxs[:,<span class=\"number\">0</span>]</span><br><span class=\"line\">  y1 = bboxs[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">  x2 = bboxs[:,<span class=\"number\">2</span>]</span><br><span class=\"line\">  y2 = bboxs[:,<span class=\"number\">3</span>]</span><br><span class=\"line\">  areas = (x2 - x1 + <span class=\"number\">1</span>) * (y2 - y1 + <span class=\"number\">1</span>)</span><br><span class=\"line\">  indices = np.array([np.arange(n)]).reshape(n,)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    tbbox = bboxs[i, :].copy()</span><br><span class=\"line\">    tscore = scores[i].copy()</span><br><span class=\"line\">    tarea = areas[i].copy()</span><br><span class=\"line\">    pos = i + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i != n-<span class=\"number\">1</span>:</span><br><span class=\"line\">      maxscore = np.<span class=\"built_in\">max</span>(scores[pos:], axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">      maxpos = np.argmax(scores[pos:], axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">      maxscore = scores[-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> tscore &lt; maxscore:</span><br><span class=\"line\">      bboxs[i, :] = bboxs[maxpos + i + <span class=\"number\">1</span>, :]</span><br><span class=\"line\">      bboxs[maxpos + i + <span class=\"number\">1</span>, :] = tbbox</span><br><span class=\"line\">      tbbox = bboxs[i, :]</span><br><span class=\"line\"></span><br><span class=\"line\">      scores[i] = scores[maxpos + i + <span class=\"number\">1</span>]</span><br><span class=\"line\">      scores[maxpos + i + <span class=\"number\">1</span>] = tscore</span><br><span class=\"line\">      tscore = scores[i]</span><br><span class=\"line\"></span><br><span class=\"line\">      areas[i] = areas[maxpos + i + <span class=\"number\">1</span>]</span><br><span class=\"line\">      areas[maxpos + i + <span class=\"number\">1</span>] = tarea</span><br><span class=\"line\">      tarea = areas[i]</span><br><span class=\"line\"></span><br><span class=\"line\">      x_tl = np.maximum(bboxs[i, <span class=\"number\">0</span>], bboxs[pos:, <span class=\"number\">0</span>])</span><br><span class=\"line\">      y_tl = np.maximum(bboxs[i, <span class=\"number\">1</span>], bboxs[pos:, <span class=\"number\">1</span>])</span><br><span class=\"line\">      x_br = np.minimum(bboxs[i, <span class=\"number\">2</span>], bboxs[pos:, <span class=\"number\">2</span>])</span><br><span class=\"line\">      y_br = np.minimum(bboxs[i, <span class=\"number\">3</span>], bboxs[pos:, <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">      w = np.maximum(<span class=\"number\">0</span>, x_br - x_tl + <span class=\"number\">1</span>)</span><br><span class=\"line\">      h = np.maximum(<span class=\"number\">0</span>, y_br - y_tl + <span class=\"number\">1</span>)</span><br><span class=\"line\">      intersection = w * h</span><br><span class=\"line\">      iou = intersection / (areas[i] + areas[pos:] - intersection)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"># 0-linear 1-gaussian 2-original nms</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> method == <span class=\"number\">0</span>:</span><br><span class=\"line\">        weight = np.ones(iou.shape)</span><br><span class=\"line\">        weight[iou &gt; Nt] = weight[iou &gt; Nt] - iou[iou &gt; Nt]</span><br><span class=\"line\">      <span class=\"keyword\">elif</span> method == <span class=\"number\">1</span>:</span><br><span class=\"line\">        weight = np.exp(-(iou * iou) / sigma)</span><br><span class=\"line\">      <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        weight = np.ones(iou.shape)</span><br><span class=\"line\">        weight[iou &gt; Nt] = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">      scores[pos:] = weight * scores[pos:]</span><br><span class=\"line\"></span><br><span class=\"line\">  indices = indices[scores &gt; thresh]</span><br><span class=\"line\">  keep = indices.astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> keep</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">  bboxs = np.array([[<span class=\"number\">200</span>, <span class=\"number\">200</span>, <span class=\"number\">400</span>, <span class=\"number\">400</span>], [<span class=\"number\">220</span>, <span class=\"number\">220</span>, <span class=\"number\">420</span>, <span class=\"number\">420</span>], [<span class=\"number\">200</span>, <span class=\"number\">240</span>, <span class=\"number\">400</span>, <span class=\"number\">440</span>], [<span class=\"number\">240</span>, <span class=\"number\">200</span>, <span class=\"number\">440</span>, <span class=\"number\">400</span>]], dtype=np.float32)</span><br><span class=\"line\">  scores = np.array([<span class=\"number\">0.69</span>, <span class=\"number\">0.48</span>, <span class=\"number\">0.87</span>, <span class=\"number\">0.96</span>], dtype=np.float32)</span><br><span class=\"line\">  keep = softNMS(bboxs, scores, thresh=<span class=\"number\">0.1</span>, method=<span class=\"number\">1</span>)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(keep)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Softer-NMS\"><a href=\"#Softer-NMS\" class=\"headerlink\" title=\"Softer NMS\"></a>Softer NMS</h3><p><a href=\"https://arxiv.org/pdf/1809.08545.pdf\">https://arxiv.org/pdf/1809.08545.pdf</a></p>\n<p>目标检测问题：目标所有预测框均不精确、边界框不确定性（数据标注不确定性、遮挡导致不确定性、数据不确定性）、分类置信度与IoU不强相关</p>\n<p>针对分类置信度与IoU不强相关问题，构建IoU置信度</p>\n<p>针对预测框不精准，根据IoU置信度加权合并多个框优化预测框</p>\n<p>Variance Voting</p>\n","feature":false,"text":"non maximum suppression...","permalink":"/post/learning/nms","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"learning","slug":"learning","count":6,"path":"api/categories/learning.json"}],"tags":[{"name":"coding","slug":"coding","count":4,"path":"api/tags/coding.json"},{"name":"nms","slug":"nms","count":1,"path":"api/tags/nms.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NMS\"><span class=\"toc-text\">NMS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Soft-NMS\"><span class=\"toc-text\">Soft NMS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Softer-NMS\"><span class=\"toc-text\">Softer NMS</span></a></li></ol>","author":{"name":"NoleHuan","slug":"blog-author","avatar":"/img/tennis_logo.svg","link":"/","description":"The true nature of a heart is seen in its response to the unattractive.","socials":{"github":"https://github.com/nolehuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5948495997","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"metric","uid":"cd660e4484278535b991f5aebfd7a3ef","slug":"learning/metric","date":"2024-01-01T16:11:29.000Z","updated":"2024-01-01T08:12:02.450Z","comments":true,"path":"api/articles/learning/metric.json","cover":null,"text":"learning...","permalink":"/post/learning/metric","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"learning","slug":"learning","count":6,"path":"api/categories/learning.json"}],"tags":[{"name":"coding","slug":"coding","count":4,"path":"api/tags/coding.json"},{"name":"metric","slug":"metric","count":1,"path":"api/tags/metric.json"}],"author":{"name":"NoleHuan","slug":"blog-author","avatar":"/img/tennis_logo.svg","link":"/","description":"The true nature of a heart is seen in its response to the unattractive.","socials":{"github":"https://github.com/nolehuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5948495997","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"coding","uid":"b4a6538dc071828808eb7d5a2b2b15ae","slug":"learning/coding","date":"2024-01-01T15:50:29.000Z","updated":"2024-01-01T08:12:07.734Z","comments":true,"path":"api/articles/learning/coding.json","cover":null,"text":"learning...","permalink":"/post/learning/coding","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"learning","slug":"learning","count":6,"path":"api/categories/learning.json"}],"tags":[{"name":"coding","slug":"coding","count":4,"path":"api/tags/coding.json"}],"author":{"name":"NoleHuan","slug":"blog-author","avatar":"/img/tennis_logo.svg","link":"/","description":"The true nature of a heart is seen in its response to the unattractive.","socials":{"github":"https://github.com/nolehuan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5948495997","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}