[{"id":"dbb86e8f6a01395cf52e4238dc8be85a","title":"so","content":"使用 mv 与 cp 命令更新运行中的动态链接库是否会发生问题？cp 命令更新运行中的动态链接库会导致程序 core 掉？\nLinux 文件系统Linux 文件系统中，每个文件对应一个 inode 与 dentry\ninode硬盘分为两个区域：数据区与 inode table，inode 存储文件元信息，可以用 stat 命令查看\n123456789$ stat test.cpp   File: test.cpp  Size: 458       \tBlocks: 8          IO Block: 4096   regular fileDevice: 10307h/66311d\tInode: 535078      Links: 1Access: (0664/-rw-rw-r--)  Uid: ( 1000/nolehuan)   Gid: ( 1000/nolehuan)Access: 2023-11-04 15:20:56.725957003 +0800Modify: 2022-11-24 22:25:10.659748611 +0800Change: 2022-11-24 22:25:10.659748611 +0800 Birth: -\nLinks: 1 记录硬链接计数，硬链接仅文件名不同，inode 号相同；软链接文件数据块中存放对应文件的路径\nls -i 命令查看文件 inode 编号12$ ls -i test.cpp 535078 test.cpp\ndentrydirectory entry 记录文件的目录信息与 inode 指针，存在于内存中\n程序运行时，进程 pcb 中保存一份文件描述符表，文件描述符对应进程已打开文件的 file 结构体，file 结构体中包括文件打开时的标志位、引用计数和 dentry 指针等信息，通过 dentry 指针找到文件对应 inode 进而操作文件\ncp mv rm 原理执行 cp 命令时 inode 号分配规则\n\n目标文件存在则 inode 保持文件覆盖前的编号\n目标文件不存在则分配一个未使用的 inode 号，并添加至 inode table\n\n123456$ touch a b &amp;&amp; ls -i a b548015 a  560350 b$ cp a b &amp;&amp; ls -i a b548015 a  560350 b$ cp b c &amp;&amp; ls -i b c560350 b  584072 c\n执行 mv 命令时，所在文件系统相同则保持源文件 inode 号123456$ touch a b &amp;&amp; ls -i a b583955 a  584095 b$ mv a b &amp;&amp; ls -i b583955 b$ mv b c &amp;&amp; ls -i c583955 c\ncp 命令执行步骤\n\ninode 号分配\n新建 dentry 并指向 inode\n复制数据至 block 中\n\nrm 命令执行步骤\n\n递减硬链接计数，计数归零时释放 inode 号\n将数据块挂至空闲链表\n删除目录映射表中的相关行\n\nmv 命令执行步骤\n\n源文件与目标文件所在文件系统相同：新建 dentry，删除原 dentry，对 inode 无影响，不移动数据\n源文件与目标文件所在文件系统不同：cp + rm\n\nstrace 命令跟踪 cp 执行过程1234567891011121314151617$ cat afile a$ cat bfile b$ strace cp a b...openat(AT_FDCWD, &quot;a&quot;, O_RDONLY)         = 3fstat(3, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;b&quot;, O_WRONLY|O_TRUNC) = 4fstat(4, &#123;st_mode=S_IFREG|0664, st_size=0, ...&#125;) = 0...read(3, &quot;file a\\n&quot;, 131072)             = 7write(4, &quot;file a\\n&quot;, 7)                 = 7read(3, &quot;&quot;, 131072)                     = 0close(4)                                = 0close(3)                                = 0...\n\ndetails\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146$ strace cp a bexecve(&quot;/bin/cp&quot;, [&quot;cp&quot;, &quot;a&quot;, &quot;b&quot;], 0x7ffccded9d50 /* 78 vars */) = 0brk(NULL)                               = 0x55a404a95000access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib&quot;, &#123;st_mode=S_IFDIR|0755, st_size=36864, ...&#125;) = 0openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=223218, ...&#125;) = 0mmap(NULL, 223218, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f89809af000close(3)                                = 0access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\20b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=154832, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809ad000mmap(NULL, 2259152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f8980595000mprotect(0x7f89805ba000, 2093056, PROT_NONE) = 0mmap(0x7f89807b9000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x24000) = 0x7f89807b9000mmap(0x7f89807bb000, 6352, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f89807bb000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\340\\33\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=31232, ...&#125;) = 0mmap(NULL, 2126336, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f898038d000mprotect(0x7f8980394000, 2093056, PROT_NONE) = 0mmap(0x7f8980593000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x7f8980593000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\260\\20\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=18680, ...&#125;) = 0mmap(NULL, 2113752, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f8980188000mprotect(0x7f898018c000, 2093056, PROT_NONE) = 0mmap(0x7f898038b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f898038b000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\240\\35\\2\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=2030928, ...&#125;) = 0mmap(NULL, 4131552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897fd97000mprotect(0x7f897ff7e000, 2097152, PROT_NONE) = 0mmap(0x7f898017e000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7f898017e000mmap(0x7f8980184000, 15072, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f8980184000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0 \\25\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=460728, ...&#125;) = 0mmap(NULL, 2556168, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897fb26000mprotect(0x7f897fb96000, 2093056, PROT_NONE) = 0mmap(0x7f897fd95000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6f000) = 0x7f897fd95000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0P\\16\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=14560, ...&#125;) = 0mmap(NULL, 2109712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897f922000mprotect(0x7f897f925000, 2093056, PROT_NONE) = 0mmap(0x7f897fb24000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f897fb24000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0000b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=144976, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809ab000mmap(NULL, 2221184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897f703000mprotect(0x7f897f71d000, 2093056, PROT_NONE) = 0mmap(0x7f897f91c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f897f91c000mmap(0x7f897f91e000, 13440, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f897f91e000close(3)                                = 0mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809a8000arch_prctl(ARCH_SET_FS, 0x7f89809a8800) = 0mprotect(0x7f898017e000, 16384, PROT_READ) = 0mprotect(0x7f897f91c000, 4096, PROT_READ) = 0mprotect(0x7f897fb24000, 4096, PROT_READ) = 0mprotect(0x7f897fd95000, 4096, PROT_READ) = 0mprotect(0x7f898038b000, 4096, PROT_READ) = 0mprotect(0x7f8980593000, 4096, PROT_READ) = 0mprotect(0x7f89807b9000, 4096, PROT_READ) = 0mprotect(0x55a403631000, 4096, PROT_READ) = 0mprotect(0x7f89809e6000, 4096, PROT_READ) = 0munmap(0x7f89809af000, 223218)          = 0set_tid_address(0x7f89809a8ad0)         = 5123set_robust_list(0x7f89809a8ae0, 24)     = 0rt_sigaction(SIGRTMIN, &#123;sa_handler=0x7f897f708cb0, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f897f715980&#125;, NULL, 8) = 0rt_sigaction(SIGRT_1, &#123;sa_handler=0x7f897f708d50, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f897f715980&#125;, NULL, 8) = 0rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0prlimit64(0, RLIMIT_STACK, NULL, &#123;rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY&#125;) = 0statfs(&quot;/sys/fs/selinux&quot;, 0x7ffcc58a7b60) = -1 ENOENT (No such file or directory)statfs(&quot;/selinux&quot;, 0x7ffcc58a7b60)      = -1 ENOENT (No such file or directory)brk(NULL)                               = 0x55a404a95000brk(0x55a404ab6000)                     = 0x55a404ab6000openat(AT_FDCWD, &quot;/proc/filesystems&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;) = 0read(3, &quot;nodev\\tsysfs\\nnodev\\ttmpfs\\nnodev\\tbd&quot;..., 1024) = 393read(3, &quot;&quot;, 1024)                       = 0close(3)                                = 0access(&quot;/etc/selinux/config&quot;, F_OK)     = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=5513488, ...&#125;) = 0mmap(NULL, 5513488, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f897f1c0000close(3)                                = 0geteuid()                               = 1000stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0stat(&quot;a&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;a&quot;, O_RDONLY)         = 3fstat(3, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;b&quot;, O_WRONLY|O_TRUNC) = 4fstat(4, &#123;st_mode=S_IFREG|0664, st_size=0, ...&#125;) = 0fadvise64(3, 0, 0, POSIX_FADV_SEQUENTIAL) = 0mmap(NULL, 139264, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809c4000read(3, &quot;file a\\n&quot;, 131072)             = 7write(4, &quot;file a\\n&quot;, 7)                 = 7read(3, &quot;&quot;, 131072)                     = 0close(4)                                = 0close(3)                                = 0munmap(0x7f89809c4000, 139264)          = 0lseek(0, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)close(0)                                = 0close(1)                                = 0close(2)                                = 0exit_group(0)                           = ?+++ exited with 0 +++\n\n\nstrace 命令跟踪 mv 执行过程12345678$ cat afile a$ cat bfile b$ strace mv a b...rename(&quot;a&quot;, &quot;b&quot;)                        = 0...\n\ndetails\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143$ strace mv a bexecve(&quot;/bin/mv&quot;, [&quot;mv&quot;, &quot;a&quot;, &quot;b&quot;], 0x7fffb37729b0 /* 78 vars */) = 0brk(NULL)                               = 0x55b38eebf000access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib&quot;, &#123;st_mode=S_IFDIR|0755, st_size=36864, ...&#125;) = 0openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=223218, ...&#125;) = 0mmap(NULL, 223218, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f615a44d000close(3)                                = 0access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\20b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=154832, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a44b000mmap(NULL, 2259152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f615a033000mprotect(0x7f615a058000, 2093056, PROT_NONE) = 0mmap(0x7f615a257000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x24000) = 0x7f615a257000mmap(0x7f615a259000, 6352, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f615a259000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\340\\33\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=31232, ...&#125;) = 0mmap(NULL, 2126336, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159e2b000mprotect(0x7f6159e32000, 2093056, PROT_NONE) = 0mmap(0x7f615a031000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x7f615a031000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\260\\20\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=18680, ...&#125;) = 0mmap(NULL, 2113752, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159c26000mprotect(0x7f6159c2a000, 2093056, PROT_NONE) = 0mmap(0x7f6159e29000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f6159e29000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\240\\35\\2\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=2030928, ...&#125;) = 0mmap(NULL, 4131552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159835000mprotect(0x7f6159a1c000, 2097152, PROT_NONE) = 0mmap(0x7f6159c1c000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7f6159c1c000mmap(0x7f6159c22000, 15072, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f6159c22000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0 \\25\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=460728, ...&#125;) = 0mmap(NULL, 2556168, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61595c4000mprotect(0x7f6159634000, 2093056, PROT_NONE) = 0mmap(0x7f6159833000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6f000) = 0x7f6159833000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0P\\16\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=14560, ...&#125;) = 0mmap(NULL, 2109712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61593c0000mprotect(0x7f61593c3000, 2093056, PROT_NONE) = 0mmap(0x7f61595c2000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f61595c2000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0000b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=144976, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a449000mmap(NULL, 2221184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61591a1000mprotect(0x7f61591bb000, 2093056, PROT_NONE) = 0mmap(0x7f61593ba000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f61593ba000mmap(0x7f61593bc000, 13440, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f61593bc000close(3)                                = 0mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a446000arch_prctl(ARCH_SET_FS, 0x7f615a446800) = 0mprotect(0x7f6159c1c000, 16384, PROT_READ) = 0mprotect(0x7f61593ba000, 4096, PROT_READ) = 0mprotect(0x7f61595c2000, 4096, PROT_READ) = 0mprotect(0x7f6159833000, 4096, PROT_READ) = 0mprotect(0x7f6159e29000, 4096, PROT_READ) = 0mprotect(0x7f615a031000, 4096, PROT_READ) = 0mprotect(0x7f615a257000, 4096, PROT_READ) = 0mprotect(0x55b38e8b8000, 4096, PROT_READ) = 0mprotect(0x7f615a484000, 4096, PROT_READ) = 0munmap(0x7f615a44d000, 223218)          = 0set_tid_address(0x7f615a446ad0)         = 6068set_robust_list(0x7f615a446ae0, 24)     = 0rt_sigaction(SIGRTMIN, &#123;sa_handler=0x7f61591a6cb0, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f61591b3980&#125;, NULL, 8) = 0rt_sigaction(SIGRT_1, &#123;sa_handler=0x7f61591a6d50, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f61591b3980&#125;, NULL, 8) = 0rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0prlimit64(0, RLIMIT_STACK, NULL, &#123;rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY&#125;) = 0statfs(&quot;/sys/fs/selinux&quot;, 0x7ffc2d703630) = -1 ENOENT (No such file or directory)statfs(&quot;/selinux&quot;, 0x7ffc2d703630)      = -1 ENOENT (No such file or directory)brk(NULL)                               = 0x55b38eebf000brk(0x55b38eee0000)                     = 0x55b38eee0000openat(AT_FDCWD, &quot;/proc/filesystems&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;) = 0read(3, &quot;nodev\\tsysfs\\nnodev\\ttmpfs\\nnodev\\tbd&quot;..., 1024) = 393read(3, &quot;&quot;, 1024)                       = 0close(3)                                = 0access(&quot;/etc/selinux/config&quot;, F_OK)     = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=5513488, ...&#125;) = 0mmap(NULL, 5513488, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f6158c5e000close(3)                                = 0geteuid()                               = 1000ioctl(0, TCGETS, &#123;B38400 opost isig icanon echo ...&#125;) = 0stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0lstat(&quot;a&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0lstat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0geteuid()                               = 1000stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0geteuid()                               = 1000getegid()                               = 1000getuid()                                = 1000getgid()                                = 1000access(&quot;b&quot;, W_OK)                       = 0rename(&quot;a&quot;, &quot;b&quot;)                        = 0lseek(0, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)close(0)                                = 0close(1)                                = 0close(2)                                = 0exit_group(0)                           = ?+++ exited with 0 +++\n\n\n动态库应用程序使用动态库过程\n\n应用程序通过 dlopen 打开 so 时，内核通过 mmap 将 so 加载到进程地址空间，对应虚拟内存区域 VMA 中的页 page\n加载器 loader 将 so 里引用的外部符号解析成真正的虚拟地址\n当 so 被 cp trunc 时，内核将旧 so 文件从虚拟内存对应物理内存中清除\n当应用程序运行到 so 中的代码时，产生缺页中断\n内核重新加载新 so\n如果文件偏移量超出新 so 地址范围，将产生 bus error\n如果新 so 依赖外部符号，此时全局符号表没有经过重新解析，将产生段错误\n如果新 so 不依赖外部符号，程序可以运行\n\n\n\n测试库文件1234567891011#include &lt;stdio.h&gt;void func(void) &#123;  printf(&quot;new lib\\n&quot;);  printf(&quot;old lib\\n&quot;);&#125;void add(void) &#123;  int a = 1, b = 2;  int c = a + b;&#125;\n测试文件12345678910111213141516171819202122232425262728293031#include &lt;dlfcn.h&gt;#include &lt;stdio.h&gt;int main() &#123;  void* handle;  void (*func)(void);  void (*add)(void);  handle = dlopen(&quot;libtest.so&quot;, RTLD_LAZY);  if (!handle) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  func = dlsym(handle, &quot;func&quot;);  if (dlerror() != NULL) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  func();  add = dlsym(handle, &quot;add&quot;);  if (dlerror() != NULL) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  add();  dlclose(handle);&#125;\n编译12$ gcc -fPIC -shared -o libtest.so libtest.c -g$ gcc -o use_lib use_lib.c -ldl -g\n-g 生成调试信息\n-fPIC 生成位置无关代码(Position-Independent Code)，创建共享库时允许代码在任何内存地址执行而无需修改\n报错解决，修改 LD_PRELOAD 无效12libtest.so: cannot open shared object file: No such file or directory$ export LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH\ngdb 调试：函数调用处添加断点后，在另一终端 cp 替换库文件 so，回到 gdb n 继续单步运行\n\nfunc 函数断点调试\n\n12345678910111213141516171819$ gdb use_libGNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1...Reading symbols from use_lib...done.(gdb) b 20Breakpoint 1 at 0x876: file use_lib.c, line 20.(gdb) rStarting program: /home/nolehuan/cpp/src/use_lib Breakpoint 1, main () at use_lib.c:2020\t  func();(gdb) nProgram received signal SIGSEGV, Segmentation fault.0x0000000000000536 in ?? ()(gdb) bt#0  0x0000000000000536 in ?? ()#1  0x00007ffff75dc63a in func () at libtest.c:4#2  0x000055555555487c in main () at use_lib.c:20\n\nadd 函数断点调试\n\n1234567891011121314$ gdb use_libGNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1...Reading symbols from use_lib...done.(gdb) b 27Breakpoint 1 at 0x8c7: file use_lib.c, line 27.(gdb) rStarting program: /home/nolehuan/cpp/src/use_lib old libBreakpoint 1, main () at use_lib.c:2727\t  add();(gdb) n29\t  dlclose(handle);\n结论\ncp 更新动态库，文件 inode 号不变，旧库文件被截断，重新加载至内存时，或因为文件偏移量超出新库文件地址范围产生 bus error 导致程序 core 掉，或因为动态库依赖外部符号但全局符号表没有经过重新解析产生段错误导致程序 core 掉\nmv 更新动态库，文件 inode 号改变，旧 inode 号依然存在，程序可以继续运行，必须重启服务才会加载新动态库\n\n正确做法rm + cp 或 mv + cp\nrm 时如果 ld.so 正在加载动态库，inode 不会立刻被删除，直至 ld.so 释放对动态库的引用，引用结束时才会真正删除 inode，程序不会崩溃，下次使用替换后的动态库\nmv 仅改变文件名，inode 不变，新动态库使用新 inode，动态链接器 ld.so 使用原 inode 访问旧动态库\n替换可执行程序时，系统会明令禁止 cp 操作，但系统不会阻止覆盖动态库12cp xxx xxxcp: cannot create regular file `xxx`: Text file busy\nDemand Paging 机制\n程序运行时并非所有页都加载到内存中，只有需要访问时才会动态加载，Demand Paging 要求正在运行中的程序镜像不被意外修改，因此内核会锁定程序镜像的 inode\n对于动态库而言，依靠用户态程序 ld.so 加载，无权锁定 inode\n相关内容环境变量\n\nLIBRARY_PATH 静态链接库文件搜索路径\nLD_LIBRARY_PATH 动态链接库文件搜索路径\n\n动态库 .so 与静态库 .a 同时存在时，gcc/g++ 默认链接动态库，可使用参数 -Wl,-Bstatic -lxxx 或 -Wl,-Bdynamic -lxxx 指定链接静态/动态库\n参数 -static 指定完全静态加载\n静态库加载顺序\n\ngcc -L 参数\nLIBRARY_PATH\n默认库目录\n\n动态库加载顺序\n\ngcc -L 参数\nLD_LIBRARY_PATH\n/etc/ld.so.conf 配置文件中的路径\n默认库目录\n\nldd 查看可执行程序依赖的共享库\n动态库命名：libxxxx.so.major.minor，major 主版本号，minor 副版本号 \ngcc 分阶段编译123$ gcc -E libtest.c -o libtest.i$ gcc -S libtest.i -o libtest.s$ gcc -c libtest.s -o libtest.oar archivec 创建新的归档文件，已存在则覆盖q 快速追加s 构建对象索引文件，即符号表\n生成静态库1$ ar cqs libtest.a libtest.o\nnm 查看库中的函数\n\nT 函数在当前库中定义\nU 函数在其它库中定义被调用\nW 当前库中定义，被其它库中的函数覆盖\n\n1234567891011121314151617181920212223242526nm libtest.so000000000000063d T add0000000000201028 B __bss_start0000000000201028 b completed.7698                 w __cxa_finalize@@GLIBC_2.2.50000000000000550 t deregister_tm_clones00000000000005e0 t __do_global_dtors_aux0000000000200e18 t __do_global_dtors_aux_fini_array_entry0000000000201020 d __dso_handle0000000000200e20 d _DYNAMIC0000000000201028 D _edata0000000000201030 B _end0000000000000660 T _fini0000000000000620 t frame_dummy0000000000200e10 t __frame_dummy_init_array_entry0000000000000738 r __FRAME_END__000000000000062a T func0000000000201000 d _GLOBAL_OFFSET_TABLE_                 w __gmon_start__0000000000000674 r __GNU_EH_FRAME_HDR0000000000000500 T _init                 w _ITM_deregisterTMCloneTable                 w _ITM_registerTMCloneTable                 U puts@@GLIBC_2.2.50000000000000590 t register_tm_clones0000000000201028 d __TMC_END__\n1234567$ nm libtest.a libtest.o:0000000000000013 T add0000000000000000 T func                 U _GLOBAL_OFFSET_TABLE_                 U puts\n参考https://developer.aliyun.com/article/6371https://www.cnblogs.com/wangliangblog/p/10766986.htmlhttps://blog.csdn.net/BHJ1119/article/details/88219896\n","slug":"cpp/so","date":"2023-11-26T19:30:29.000Z","categories_index":"coding","tags_index":"cpp,linux,so","author_index":"NoleHuan"},{"id":"b6a9caeeb7241bffd17076a1e5fbb45c","title":"Resume","content":"2016.09-2017.01吉林大学 土地资源管理专业 学士\n\n管理学 地质学 矿物学\n\n2017.02-2020.06吉林大学 汽车服务工程专业 学士\n\n机械设计 汽车构造 力学 嵌入式\n\n保研\n\n\n2020.09-2023.01北京航空航天大学 车辆工程专业 硕士\n\n自动驾驶 深度学习 多视角几何\n\n2022.03-2022.06百度 自动驾驶技术部 算法研发实习生\n\n自动化标注 图像处理\n\n2023.02-2023.11京东 智能驾驶技术部 嵌入式软件工程师\n\n自动驾驶系统中间件\n\n2023.08-2023.11京东 仓储软件产品 轮岗\n\n技术产品经理/算法工程师/前端开发工程师\n\n竞品分析 多智能体路径规划 强化学习 前端\n\n\n","slug":"intro/index","date":"2023-11-05T15:30:29.000Z","categories_index":"personal","tags_index":"resume","author_index":"NoleHuan"},{"id":"2cd00e0769342673374b2e7297d06c25","title":"Daily","content":"x\n","slug":"daily/index","date":"2023-11-05T15:30:29.000Z","categories_index":"personal","tags_index":"daily","author_index":"NoleHuan"},{"id":"eda2c6f2f2b293bf58653094b36219f7","title":"Linux cp","content":"\n1using namespace std;\noutlineevidence_{i}=\\sum_{j}W_{ij}x_{j}+b_{i}outline\ninline x_v^b inline\n\n","slug":"cpp/cp","date":"2023-11-05T15:30:29.000Z","categories_index":"coding","tags_index":"cpp","author_index":"NoleHuan"},{"id":"14262cd5dd518b813cca51a94d2a4098","title":"Linux map","content":"\n1using namespace std;\n","slug":"cpp/map","date":"2023-11-05T15:30:29.000Z","categories_index":"coding","tags_index":"cpp","author_index":"NoleHuan"}]