[{"id":"52240cdca43c5dd62ab21b1f1feb6942","title":"loss","content":"交叉熵 or 均方误差损失函数用 Sigmoid 作为激活函数时，为什么用交叉熵损失函数，而不用均方误差损失函数？\n\n均方误差损失函数\n\n\n\n\n\n更新参数  和 ：\n\n\n 在  取大部分值时很小，导致参数更新非常慢\n\n交叉熵损失函数\n\n\n\n\n\n\n更新参数  和 ：\n\n\n参数更新没有  项，误差大时，权重更新快，误差小时，权重更新慢\n","slug":"learning/loss.","date":"2024-01-01T16:18:29.000Z","categories_index":"learning","tags_index":"loss","author_index":"NoleHuan"},{"id":"05d8b7ec3259b85f8c48af5355fd4be4","title":"dropout","content":"Dropout 原理减轻 CNN 过拟合的正则化方法，Hinton 2012年提出\n在一次训练的迭代中，对每一层中的神经元（总数为 N）以概率 P 随机剔除，用剩余 (1-P)×N 个神经元所构成的网络来训练本次迭代中的数据（batchsize 个样本）\n减少中间特征的数量，从而减少冗余，即增加每层各个特征之间的正交性\n123456789# inverted dropoutdef dropout(x, level):  if level &lt; 0. or level &gt;= 1:    raise Exception(&#x27;Dropout level must be in interval [0, 1].&#x27;)  retain_prob = 1. - level  sample = np.random.binomial(n=1, p=retain_prob, size=x.shape)  x *= sample  x /= retain_prob //  return x\nx /= retain_prob 保持输入输出期望一致 inverted dropout\nDropConnect丢弃部分网络权重\nSpatial Dropout随机地对某个特定的维度全部置零，需要指定 Dropout 维度\n","slug":"learning/dropout","date":"2024-01-01T16:15:29.000Z","categories_index":"learning","tags_index":"coding","author_index":"NoleHuan"},{"id":"cd660e4484278535b991f5aebfd7a3ef","title":"metric","content":"AP F1score12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697# https://github.com/eriklindernoren/PyTorch-YOLOv3/blob/master/pytorchyolo/utils/utils.py# import tqdmimport numpy as npdef ap_per_class(tp, conf, pred_cls, target_cls):  &quot;&quot;&quot; Compute the average precision, given the recall and precision curves.  Source: https://github.com/rafaelpadilla/Object-Detection-Metrics.  # Arguments      tp:         true positive (np array), true positive 1, false positive 0      conf:       Objectness value from 0-1 (np array).      pred_cls:   Predicted object classes (np array).      target_cls: True object classes (np array).  # Returns      The average precision as computed in py-faster-rcnn.  &quot;&quot;&quot;  # Sort by objectness  i = np.argsort(-conf)  tp, conf, pred_cls = tp[i], conf[i], pred_cls[i]  # Find unique classes  unique_classes = np.unique(target_cls)  # Create Precision-Recall curve and compute AP for each class  ap, p, r = [], [], []  # for c in tqdm.tqdm(unique_classes, desc=&quot;Computing AP&quot;):  for c in unique_classes:    i = pred_cls == c    n_gt = (target_cls == c).sum()  # Number of ground truth objects    n_p = i.sum()  # Number of predicted objects    if n_p == 0 and n_gt == 0:      continue    elif n_p == 0 or n_gt == 0:      ap.append(0)      r.append(0)      p.append(0)    else:      # Accumulate FPs and TPs      fpc = (1 - tp[i]).cumsum()      tpc = (tp[i]).cumsum()      # Recall      recall_curve = tpc / (n_gt + 1e-16)      r.append(recall_curve[-1])      # Precision      precision_curve = tpc / (tpc + fpc)      p.append(precision_curve[-1])      # AP from recall-precision curve      ap.append(compute_ap(recall_curve, precision_curve))  # Compute F1 score (harmonic mean of precision and recall)  p, r, ap = np.array(p), np.array(r), np.array(ap)  f1 = 2 * p * r / (p + r + 1e-16)  return p, r, ap, f1, unique_classes.astype(&quot;int32&quot;)def compute_ap(recall, precision):  &quot;&quot;&quot; Compute the average precision, given the recall and precision curves.  Code originally from https://github.com/rbgirshick/py-faster-rcnn.  # Arguments      recall:    The recall curve (np.array).      precision: The precision curve (np.array).  # Returns      The average precision as computed in py-faster-rcnn.  &quot;&quot;&quot;  # correct AP calculation  # first append sentinel values at the end  mrec = np.concatenate(([0.0], recall, [1.0]))  mpre = np.concatenate(([0.0], precision, [0.0]))  # compute the precision envelope  for i in range(mpre.size - 1, 0, -1):    mpre[i - 1] = np.maximum(mpre[i - 1], mpre[i])  # to calculate area under PR curve, look for points  # where X axis (recall) changes value  i = np.where(mrec[:-1] != mrec[1:])[0]  # and sum (\\Delta recall) * prec  ap = np.sum((mrec[i + 1] - mrec[i]) * mpre[i + 1])  return apif __name__ == &#x27;__main__&#x27;:  tp = np.array([0, 1, 1, 1, 0, 1, 0])  conf = np.array([0.45, 0.6, 0.86, 0.94, 0.23, 0.76, 0.34])  pred_cls = np.array([0, 1, 2, 1, 2, 3, 0])  target_cls = np.array([3, 1, 2, 1, 0, 3, 1])  p, r, ap, f1, unique_classes = ap_per_class(tp, conf, pred_cls, target_cls)  print(p)  print(r)  print(ap)  # print(f1)  # print(unique_classes)\nAUC12345678910111213141516171819202122232425def calcAUC(labels, probs):  P = np.sum(labels == 1)  N = np.sum(labels == 0)  neg_prob = []  pos_prob = []  for i, label in enumerate(labels):    if (label == 1):      pos_prob.append(probs[i])    else:      neg_prob.append(probs[i])  count = 0  for pos in pos_prob:    for neg in neg_prob:      if pos &gt; neg:        count += 1      elif pos == neg:        count += 0.5  return count / (N * P)from sklearn.metrics import roc_auc_scorelabels = np.array([1, 0, 0, 0, 1, 0, 1, 0])probs = np.array([0.9, 0.8, 0.3, 0.1, 0.4, 0.9, 0.66, 0.7])print(calcAUC(labels, probs))print(roc_auc_score(labels, probs))\n","slug":"learning/metric","date":"2024-01-01T16:11:29.000Z","categories_index":"learning","tags_index":"coding,metric","author_index":"NoleHuan"},{"id":"7e6b04d6ee5d3c39d64da1c68ae92e32","title":"nms","content":"NMS在目标检测网络中，产生 proposal 后使用分类分支给出每个框的每类置信度，使用回归分支修正框的位置，最终使用 NMS 去除同个类别中 IOU 重叠度较高且置信度较低的检测框\n\n将 BBox 按 Score 降序排列\n从 Score 最大值开始，保存当前 BBox，依次遍历其后的 BBox，计算与当前 BBox 的 IOU，大于阈值则抑制\n遍历一遍后，继续选择下一个非抑制 BBox 重复上述步骤\n返回没有被抑制的 BBox\n\n12345678910111213141516171819202122232425262728293031def NMS(bboxs, score, thresh):  x1 = bboxs[:, 0]  y1 = bboxs[:, 1]  x2 = bboxs[:, 2]  y2 = bboxs[:, 3]  n = bboxs.shape[0]  area = (x2 - x1 + 1) * (y2 - y1 + 1)  order = score.argsort()[::-1]  keep = []  suppressed = np.array([0] * n)  for i_ in range(n):    i = order[i_]    if suppressed[i] == 1:      continue    keep.append(i)    for j_ in range(i_ + 1, n):      j = order[j_]      if suppressed[j] == 1:        continue      x_tl = max(x1[i], x1[j])      y_tl = max(y1[i], y1[j])      x_br = min(x2[i], x2[j])      y_br = min(y2[i], y2[j])      w = max(0, x_br - x_tl + 1)      h = max(0, y_br - y_tl + 1)      intersection = w * h      iou = intersection / (area[i] + area[j] - intersection)      if iou &gt;= thresh:        suppressed[j] = 1  return keep\nSoft NMSNMS 会直接删除 IOU 较大的两个真实目标中的一个，造成漏检\nSoftNMS 会对得分进行衰减\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768import numpy as npdef softNMS(bboxs, scores, Nt=0.3, sigma=0.5, thresh=0.001, method=2):  n = bboxs.shape[0]  x1 = bboxs[:,0]  y1 = bboxs[:,1]  x2 = bboxs[:,2]  y2 = bboxs[:,3]  areas = (x2 - x1 + 1) * (y2 - y1 + 1)  indices = np.array([np.arange(n)]).reshape(n,)  for i in range(n):    tbbox = bboxs[i, :].copy()    tscore = scores[i].copy()    tarea = areas[i].copy()    pos = i + 1    if i != n-1:      maxscore = np.max(scores[pos:], axis=0)      maxpos = np.argmax(scores[pos:], axis=0)    else:      maxscore = scores[-1]    if tscore &lt; maxscore:      bboxs[i, :] = bboxs[maxpos + i + 1, :]      bboxs[maxpos + i + 1, :] = tbbox      tbbox = bboxs[i, :]      scores[i] = scores[maxpos + i + 1]      scores[maxpos + i + 1] = tscore      tscore = scores[i]      areas[i] = areas[maxpos + i + 1]      areas[maxpos + i + 1] = tarea      tarea = areas[i]      x_tl = np.maximum(bboxs[i, 0], bboxs[pos:, 0])      y_tl = np.maximum(bboxs[i, 1], bboxs[pos:, 1])      x_br = np.minimum(bboxs[i, 2], bboxs[pos:, 2])      y_br = np.minimum(bboxs[i, 3], bboxs[pos:, 3])      w = np.maximum(0, x_br - x_tl + 1)      h = np.maximum(0, y_br - y_tl + 1)      intersection = w * h      iou = intersection / (areas[i] + areas[pos:] - intersection)      # 0-linear 1-gaussian 2-original nms      if method == 0:        weight = np.ones(iou.shape)        weight[iou &gt; Nt] = weight[iou &gt; Nt] - iou[iou &gt; Nt]      elif method == 1:        weight = np.exp(-(iou * iou) / sigma)      else:        weight = np.ones(iou.shape)        weight[iou &gt; Nt] = 0      scores[pos:] = weight * scores[pos:]  indices = indices[scores &gt; thresh]  keep = indices.astype(int)  return keepif __name__ == &#x27;__main__&#x27;:  bboxs = np.array([[200, 200, 400, 400], [220, 220, 420, 420], [200, 240, 400, 440], [240, 200, 440, 400]], dtype=np.float32)  scores = np.array([0.69, 0.48, 0.87, 0.96], dtype=np.float32)  keep = softNMS(bboxs, scores, thresh=0.1, method=1)  print(keep)\nSofter NMShttps://arxiv.org/pdf/1809.08545.pdf\n目标检测问题：目标所有预测框均不精确、边界框不确定性（数据标注不确定性、遮挡导致不确定性、数据不确定性）、分类置信度与IoU不强相关\n针对分类置信度与IoU不强相关问题，构建IoU置信度\n针对预测框不精准，根据IoU置信度加权合并多个框优化预测框\nVariance Voting\n","slug":"learning/nms","date":"2024-01-01T16:11:29.000Z","categories_index":"learning","tags_index":"coding,nms","author_index":"NoleHuan"},{"id":"b4a6538dc071828808eb7d5a2b2b15ae","title":"coding","content":"Softmax CrossEntropysoftmax 中 exp 对很大的数会出现 inf，因此要先对每行数字减去每行的最大值，保证 softmax 的 numerical stabilitycross_entropy 中 log(predictions) 得到 (3, 3) 矩阵，target 必须也是 (3, 3) 才能对应正确相乘，因此 target 要事先转成 onehotlog 函数输入 0 时会出现错误，因此 log(predictions) 前要对 predictions 进行 clip，将其中的 0 修改为一个很小的数字\n123456789101112131415161718192021222324252627282930313233343536# https://zhuanlan.zhihu.com/p/72347472import numpy as npimport torchimport torch.nn as nndef softmax(x):  exp_x = np.exp(x - np.max(x, axis=-1, keepdims=True))  sm = exp_x / np.sum(exp_x, axis=-1, keepdims=True)  return smdef cross_entropy(predictions, targets, epsilon=1e-12):  predictions = np.clip(predictions, epsilon, 1.-epsilon)  N = predictions.shape[0]  ce = -np.sum(targets * np.log(predictions)) / N  return cedef to_onehot(label, n_classes):  N = label.shape[0]  onehot = np.zeros((N, n_classes))  for i in range(N):    onehot[i][label[i]] = 1  return onehotif __name__ == &#x27;__main__&#x27;:  x = np.array([[5, 2.5, 0.1], [4, 0.8, -2], [-2, 1.5, -30]])  label = np.array([0, 0, 1])  n_classes = x.shape[1]  targets = to_onehot(label, n_classes)  predictions = softmax(x)  print(predictions)  ce = cross_entropy(predictions, targets)  print(ce)  loss = nn.CrossEntropyLoss()  ce_torch = loss(torch.tensor(x), torch.tensor(label).type(torch.LongTensor))  print(ce_torch)\nKNN123456789101112131415161718192021222324252627282930313233import numpy as npdef createData():  group = np.array([[1.0, 2.0], [1.2, 0.1], [0.1, 1.4], [0.3, 3.5]])  labels = [&#x27;A&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;B&#x27;]  return group, labelsdef classify(input, data, label, k):  dataSize = data.shape[0]  assert(k &lt;= dataSize)  diff = np.tile(input, (dataSize, 1)) - data  sqdiff = diff ** 2  squareDist = np.sum(sqdiff, axis = 1)  dist = squareDist ** 0.5  sortedDistIndex = np.argsort(dist)  classCount = &#123;&#125;  for i in range(k):    voteLabel = label[sortedDistIndex[i]]    classCount[voteLabel] = classCount.get(voteLabel, 0) + 1  maxCount = 0  for key, value in classCount.items():    if value &gt; maxCount:      maxCount = value      classes = key  return classesif __name__ == &quot;__main__&quot;:  input = np.array([1.1, 0.9])  data, label = createData()  classes = classify(input, data, label, 2)  print(classes)\nKmeans1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import numpy as npfrom math import sqrtdef distElud(vecA, vecB):  return sqrt(sum(np.power((vecA - vecB), 2)))def randCent(data, k):  n = np.shape(data)[1]  center = np.mat(np.zeros((k, n)))  for j in range(n):    rangeJ = float(max(data[:, j]) - min(data[:, j]))    center[:, j] = min(data[:, j]) + rangeJ * np.random.rand(k, 1)  return centerdef kmeans(data, k, dist = distElud, createCent = randCent):  m = np.shape(data)[0]  clusterAssment = np.mat(np.zeros((m, 2)))  center = createCent(data, k)  # print(center)  clusterChanged = True  while clusterChanged:    clusterChanged = False    for i in range(m):      minDist = np.inf      minIndex = -1      for j in range(k):        distJI = dist(data[i, :], np.array(center[j, :]).squeeze(0))        if distJI &lt; minDist:          minDist = distJI          minIndex = j      if clusterAssment[i, 0] != minIndex:        clusterChanged = True      clusterAssment[i,:] = minIndex, minDist ** 2    for cent in range(k):      dataCent = data[np.nonzero(clusterAssment[:, 0].A == cent)[0]]      # print(dataCent)      if dataCent.shape[0] == 0:        continue      center[cent, :] = np.mean(dataCent, axis = 0)  return center, clusterAssmentif __name__ == &quot;__main__&quot;:  data = np.array([[1, 2], [2, 1], [3, 1], [5, 4], [5, 5], [6, 5],                  [10, 8], [7, 9], [11, 5], [14, 9], [14, 14]])  center, clusterAssment = kmeans(data, 3)  print(center)  print(clusterAssment)\nDBSCAN12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182# -*- coding: utf-8 -*-# https://github.com/choffstein/dbscan# A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise# Martin Ester, Hans-Peter Kriegel, Jörg Sander, Xiaowei Xu# dbscan: density based spatial clustering of applications with noiseimport numpy as npimport mathUNCLASSIFIED = FalseNOISE = Nonedef _dist(p, q):  return math.sqrt(np.power(p - q, 2).sum())def _eps_neighborhood(p, q, eps):  return _dist(p, q) &lt; epsdef _region_query(m, point_id, eps):  n_points = m.shape[1]  seeds = []  for i in range(0, n_points):      if _eps_neighborhood(m[:,point_id], m[:,i], eps):          seeds.append(i)  return seedsdef _expand_cluster(m, classifications, point_id, cluster_id, eps, min_points):  seeds = _region_query(m, point_id, eps)  if len(seeds) &lt; min_points:    classifications[point_id] = NOISE    return False  else:    classifications[point_id] = cluster_id    for seed_id in seeds:      classifications[seed_id] = cluster_id        while len(seeds) &gt; 0:      current_point = seeds[0]      results = _region_query(m, current_point, eps)      if len(results) &gt;= min_points:        for i in range(0, len(results)):          result_point = results[i]          if classifications[result_point] == UNCLASSIFIED or \\              classifications[result_point] == NOISE:            if classifications[result_point] == UNCLASSIFIED:              seeds.append(result_point)            classifications[result_point] = cluster_id      seeds = seeds[1:]    return Truedef dbscan(m, eps, min_points):  &quot;&quot;&quot;  Implementation of Density Based Spatial Clustering of Applications with Noise.  See https://en.wikipedia.org/wiki/DBSCAN.  scikit-learn probably has a better implementation.  Uses Euclidean Distance as the measure.  Inputs:  m - A matrix whose columns are feature vectors.  eps - Maximum distance two points can be to be regionally related.  min_points - The minimum number of points to make a cluster.  Outputs:  An array with either a cluster id number or dbscan.NOISE (None) for each  column vector in m.  &quot;&quot;&quot;  cluster_id = 1  n_points = m.shape[1]  classifications = [UNCLASSIFIED] * n_points  for point_id in range(0, n_points):    point = m[:,point_id]    if classifications[point_id] == UNCLASSIFIED:      if _expand_cluster(m, classifications, point_id, cluster_id, eps, min_points):        cluster_id = cluster_id + 1  return classificationsdef test_dbscan():  m = np.matrix(&#x27;1 1.2 0.8 3.7 3.9 3.6 10; 1.1 0.8 1 4 3.9 4.1 10&#x27;)  eps = 0.5  min_points = 2  assert dbscan(m, eps, min_points) == [1, 1, 1, 2, 2, 2, None]if __name__ == &quot;__main__&quot;:  test_dbscan()\nMLPNumpy\nhttps://github.com/hui126/Deep_Learning_Coding\n","slug":"learning/coding","date":"2024-01-01T15:50:29.000Z","categories_index":"learning","tags_index":"coding","author_index":"NoleHuan"},{"id":"b988af6f31f47d8c6d6425d0c29bbbe5","title":"interview","content":"反向求导Softmax\n\n\nif \n\n\n\n\n\nif \n\n\nSoftmax + CrossEntropy\n\n\n\n\n\n\n\n插值方法最近邻插值法\n双线性内插法\n\n\n\n\n\n三次内插法、立方卷积插值\n考虑周围 16 个像素值\n\n\n\n分别计算  轴和  轴的 BiCubic 函数值，然后相乘得到最终的权值，再加权相加\n\n天平找次品 个货物中有一个较轻的次品，至少用天平称多少次一定可以找到次品\n\n三等分，称数量相同的两组，一次排除三分之二\n\n\n\n\n\n \n12345678910int find_defective(int n)&#123;  int ans = 0;  if(n % 3 == 0) &#123; n--; &#125; // 9 / 3 = 3, 3 / 3 = 1  while(n &gt; 0) &#123;    n /= 3;    ans++;  &#125;  return ans;&#125;\n不规则多边形面积通过每条线段下方的面积进行计算\n判断点是否在多边形内射线法，从点向某个方向作射线，根据与多边形交点个数的奇偶判断\nConv + BN 加速策略在 Inference 阶段，可以将 BN 层的参数合并在之前的 Linear 或 Conv 层中，加速推断，因为二者都是线性变换\n\n\n\n\n\n\n\n\n\n\n\n\n\n123456789101112131415module = nn.Conv2d(in_channels=8, out_channels=16, kernel_size=3, stride=1, padding=padding)bn_module = nn.BatchNorm2d(16, affine=True)w = module.weight.data    # shape[16, 8, 3, 3]b = module.bias.data      # shape[16] 可用全零代替ws = [1] * len(w.size())  # [1, 1, 1, 1]ws[0] = w.size()[0]       # [16, 1, 1, 1]invstd = bn_module.running_var.clone().add_(bn_module.eps).pow_(-0.5)w.mul_(invstd.view(*ws).expand_as(w))b.add_(-bn_module.running_mean).mul_(invstd)if bn_module.affine:  w.mul_(bn_module.weight.data.view(*ws).expand_as(w))  b.mul_(bn_module.weight.data).add_(bn_module.bias.data)\nPixel Shuffle像素重组，可学习上采样方法，可替代插值\n\n  \n\n\n基于特征抽取和亚像素卷积的方法来扩大特征图\ntorch nn.PixelShuffle()\n\n例：Pytorch (b, c, h, w)\n特征图 (n, 256, 64, 64)，将特征图切分成若干份，每份 (n, 4, 64, 64)，reshape 成 (n, 2, 2, 64, 64)，(n, 2, 64, 2, 64)，(n, 1, 128, 128)，拼接得到 (n, 64, 128, 128)\n圆上任取三点，钝角三角形概率圆半径 1，弧 \n所有可能结果构成的平面区域 \n锐角或直角三角形构成的平面区域 \n\n钝角概率 \n5 人 5 顶不同帽子，全戴错概率错排公式\n\n\n\n\n\n\n\n\n\n\n\n\n\nX, Y 服从均匀分布, E[max(X,Y)]均匀分布\n\n\n\n\n\n\n\n\n\n\n\n绘图  \n正态分布\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n梯度下降\nChoose initial guess \nfor k = 0, 1, 2, … do\n  \n  choose  to minimize \n  \nend for\n\nL1，L2 正则化原理线性回归，L1 正则化即 Lasso 回归，L2 正则化即 Ridge 岭回归\n正则化通过降低模型的复杂性， 达到避免过拟合的效果\nL1 使部分权重变为 0，能产生稀疏性，可用于特征选择\nL2 使权重趋于 0，限制权重占比，一般认为参数值小的模型比较简单\n复杂模型尝试对所有样本进行拟合，包括异常点，造成拟合函数在较小区间内产生较大波动，反映在该区间导数较大，只有较大大参数才可能产生较大导数，加入正则项在原目标函数基础上加入约束，限制模型复杂性\nL1 范数符合拉普拉斯分布，不完全可微，表现在图像上会有很多棱角，棱角与目标函数的接触机会远大于其他部分，因此会造成最优值出现在坐标轴上，导致某一维的权重为零 ，产生稀疏权重矩阵，进而防止过拟合\nL2 范数符合高斯分布，完全可微，最优值一般不会出现在坐标轴上，在最小化正则项时，权重不断趋向于 0\nL1 正则化，权重绝对值之和\n\n\n\n\n 正则化系数  学习率\n\n\nL2 正则化\n\n\n\n\n \n权重衰减\n可否用梯度下降训练 SVMhttps://zhuanlan.zhihu.com/p/31886934\n二分类模型，定义在特征空间上的间隔最大的线性分类器，核技巧→非线性分类器\n可形式化为一个求解凸二次规划的最优化问题，也等价于正则化的合页损失函数的最小化问题，具有全局最优解\nSVM 本质是带约束的二次规划问题，可以用拉格朗日乘数法或 Hinge Loss 转换为无约束优化问题\n分离超平面 ，几何间隔最大的分离超平面唯一\n几何间隔：\n最大化所有样本点几何间隔的最小值\n支持向量机重要性质：训练完成后，大部分的训练样本都不需要保留，最终模型仅与支持向量有关\n软间隔，缓解特征空间中线性不可分问题\n \n\n\n令 \n \n分类决策函数\n序列最小最优化（SMO）算法，包括两部分：求解两个变量二次规划的解析方法和选择变量的启发式方法\nHinge 损失函数保持支持向量机解的稀疏性\n核函数，将样本映射到高维特征空间\n对残差网络的理解当增加网络层数后，网络可以进行更加复杂的特征模式的提取，所以当模型更深时理论上可以取得更好的结果\n退化问题（Degradation problem）：网络深度增加时，网络准确度出现饱和，甚至出现下降\n深层网络存在着梯度消失或者爆炸的问题\n通过向上堆积新层建立深层网络，一个极端情况是增加的层什么也不学习，仅仅复制浅层网络的特征，即新层是恒等映射（Identity mapping），在这种情况下，深层网络应该至少和浅层网络性能一样，也不应该出现退化现象\n残差学习解决退化问题\n\n  \n\n\n当输入为  时学习到的特征记为 ，我们希望其可以学习到残差 ，其原始的学习特征是 。残差学习相比原始特征直接学习更容易。当残差为 0 时，此时堆积层仅做恒等映射，至少网络性能不会下降，实际上残差不会为 0，使得堆积层在输入特征基础上学习到新的特征，从而拥有更好的性能\n梯度消失和梯度爆炸在比较深的网络中，采用了不合适的激活函数，比如 sigmoid\n梯度爆炸一般出现在深层网络和权值初始化值太大的情况下\n链式求导\n\n\n\n\n\nSigmoid 激活函数  导数最大值 \n层数越多，导数越小，梯度消失更普遍\n 较大，，梯度爆炸\n解决方案：\nReLU, leaky relu 激活函数取代 Sigmoid 激活函数\n梯度剪裁、规范\n引入 batch normalization、残差结构、梯度正则化\n过拟合训练、验证、测试 8:1:1 7:2:1\n交叉验证\nK 折验证  将数据分成 K 个子集，其中一个子集进行验证，其他子集用于训练\n数据增强\n早停\n验证损失开始增加时，停止训练模型\n移除特征\n移除特征能够降低模型的复杂性，并且在一定程度上避免噪声，使模型更高效。为了降低复杂度，可以移除特征层或减少神经元数量，使网络变小\n正则化\n正则化可用于降低模型的复杂性\n损失函数 L1 L2\nDropout\n参考https://leetcode-cn.com/circle/discuss/7LCBce/\n","slug":"learning/interview","date":"2023-12-31T15:55:29.000Z","categories_index":"learning","tags_index":"CNN","author_index":"NoleHuan"},{"id":"0743a9436352de52ce0648750c1f5616","title":"freopen","content":"拒绝三方库日志霸屏\n1234567891011121314#include &lt;stdio.h&gt;int main()&#123;  freopen(&quot;log.txt&quot;, &quot;w&quot;, stdout);  freopen(&quot;error.txt&quot;, &quot;w&quot;, stderr);  printf(&quot;out\\n&quot;);  perror(&quot;error&quot;);  freopen(&quot;/dev/tty&quot;, &quot;w&quot;, stdout);  freopen(&quot;/dev/tty&quot;, &quot;w&quot;, stderr);  printf(&quot;out\\n&quot;);  perror(&quot;error&quot;);  return 0;&#125;\n12345678$ g++ -o log log.cc $ ./log outerror: Invalid argument$ cat log.txt out$ cat error.txt error: Success\nperror 将上一个函数发生错误的原因输出到标准设备stderr，打印字符串后加errno对应的错误原因字符串，无错误则打印Success\n","slug":"cpp/freopen","date":"2023-12-30T12:09:29.000Z","categories_index":"linux","tags_index":"c","author_index":"NoleHuan"},{"id":"e0bcc7841199a311c03a49e060ae24e8","title":"elf","content":"demo1234567891011121314151617181920int printf(const char* format, ...);int global_init_var = 84;int global_uninit_var;void func(int i) &#123;  printf(&quot;%d\\n&quot;, i);&#125;int main(void) &#123;  static int static_var = 85;  static int static_uninit_var;  int a = 1;  int b;  func(static_var + static_uninit_var + a + b);  return a;&#125;\n123456789101112131415161718192021222324$ gcc -c SimpleSection.c$ objdump -h SimpleSection.o SimpleSection.o:     file format elf64-x86-64Sections:Idx Name          Size      VMA               LMA               File off  Algn  0 .text         00000057  0000000000000000  0000000000000000  00000040  2**0                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE  1 .data         00000008  0000000000000000  0000000000000000  00000098  2**2                  CONTENTS, ALLOC, LOAD, DATA  2 .bss          00000004  0000000000000000  0000000000000000  000000a0  2**2                  ALLOC  3 .rodata       00000004  0000000000000000  0000000000000000  000000a0  2**0                  CONTENTS, ALLOC, LOAD, READONLY, DATA  4 .comment      0000002a  0000000000000000  0000000000000000  000000a4  2**0                  CONTENTS, READONLY  5 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000ce  2**0                  CONTENTS, READONLY  6 .eh_frame     00000058  0000000000000000  0000000000000000  000000d0  2**3                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA$ size SimpleSection.o    text\t   data\t    bss\t    dec\t    hex\tfilename    179\t      8\t      4\t    191\t     bf\tSimpleSection.o\n\n  \n\n\n.text 代码段.data 数据段，保存已初始化的全局变量global_init_var和局部静态变量static_var.bss BSS段，为未初始化的全局变量global_uninit_var和局部静态变量static_uninit_var预留空间，不存储变量.rodata 只读数据段，保存字符串常量”%d\\n”和只读变量const.comment 注释信息段.note.GNU-stack 堆栈提示段CONTENTS 表示在文件中存在Size 段的长度File off 段的位置\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960$ objdump -s -d SimpleSection.o SimpleSection.o:     file format elf64-x86-64Contents of section .text: 0000 554889e5 4883ec10 897dfc8b 45fc89c6  UH..H....&#125;..E... 0010 488d3d00 000000b8 00000000 e8000000  H.=............. 0020 0090c9c3 554889e5 4883ec10 c745f801  ....UH..H....E.. 0030 0000008b 15000000 008b0500 00000001  ................ 0040 c28b45f8 01c28b45 fc01d089 c7e80000  ..E....E........ 0050 00008b45 f8c9c3                      ...E...         Contents of section .data: 0000 54000000 55000000                    T...U...        Contents of section .rodata: 0000 25640a00                             %d..            Contents of section .comment: 0000 00474343 3a202855 62756e74 7520372e  .GCC: (Ubuntu 7. 0010 352e302d 33756275 6e747531 7e31382e  5.0-3ubuntu1~18. 0020 30342920 372e352e 3000               04) 7.5.0.      Contents of section .eh_frame: 0000 14000000 00000000 017a5200 01781001  .........zR..x.. 0010 1b0c0708 90010000 1c000000 1c000000  ................ 0020 00000000 24000000 00410e10 8602430d  ....$....A....C. 0030 065f0c07 08000000 1c000000 3c000000  ._..........&lt;... 0040 00000000 33000000 00410e10 8602430d  ....3....A....C. 0050 066e0c07 08000000                    .n......        Disassembly of section .text:0000000000000000 &lt;func&gt;:   0:\t55                   \tpush   %rbp   1:\t48 89 e5             \tmov    %rsp,%rbp   4:\t48 83 ec 10          \tsub    $0x10,%rsp   8:\t89 7d fc             \tmov    %edi,-0x4(%rbp)   b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax   e:\t89 c6                \tmov    %eax,%esi  10:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 17 &lt;func+0x17&gt;  17:\tb8 00 00 00 00       \tmov    $0x0,%eax  1c:\te8 00 00 00 00       \tcallq  21 &lt;func+0x21&gt;  21:\t90                   \tnop  22:\tc9                   \tleaveq   23:\tc3                   \tretq   0000000000000024 &lt;main&gt;:  24:\t55                   \tpush   %rbp  25:\t48 89 e5             \tmov    %rsp,%rbp  28:\t48 83 ec 10          \tsub    $0x10,%rsp  2c:\tc7 45 f8 01 00 00 00 \tmovl   $0x1,-0x8(%rbp)  33:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 39 &lt;main+0x15&gt;  39:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3f &lt;main+0x1b&gt;  3f:\t01 c2                \tadd    %eax,%edx  41:\t8b 45 f8             \tmov    -0x8(%rbp),%eax  44:\t01 c2                \tadd    %eax,%edx  46:\t8b 45 fc             \tmov    -0x4(%rbp),%eax  49:\t01 d0                \tadd    %edx,%eax  4b:\t89 c7                \tmov    %eax,%edi  4d:\te8 00 00 00 00       \tcallq  52 &lt;main+0x2e&gt;  52:\t8b 45 f8             \tmov    -0x8(%rbp),%eax  55:\tc9                   \tleaveq   56:\tc3                   \tretq\n-s 以十六进制打印所有段的内容-d 将所有包含指令的段反汇编-x 显示所有头信息\n1234567$ objdump -x -s -d SimpleSection.o...Contents of section .data: 0000 54000000 55000000                    T...U...        Contents of section .rodata: 0000 25640a00                             %d.....\n.data 段的前四个字节54000000（小端存储）即global_init_var=84\n","slug":"linux/elf","date":"2023-12-23T17:40:29.000Z","categories_index":"linux","tags_index":"cpp","author_index":"NoleHuan"},{"id":"b44b5d13a338bda0cd33dc54fb31c3ef","title":"lttng","content":"install1234567$ sudo apt-add-repository ppa:lttng/stable-2.13$ sudo apt-get update$ sudo apt-get install lttng-tools$ sudo apt-get install lttng-modules-dkms$ sudo apt-get install liblttng-ust-dev$ sudo apt-get install liblttng-ctl-dev$ sudo apt-get install babeltrace\nusage1\n1$ g++ -o test_lttng test_lttng.cc -llttng-ust -llttng-ctl\n参考https://lttng.org/https://github.com/lttng/\n","slug":"linux/lttng","date":"2023-12-09T13:11:29.000Z","categories_index":"linux","tags_index":"trace","author_index":"NoleHuan"},{"id":"7790d923d44c9f611a31c98e9aa24f9f","title":"op","content":"链接优化技术函数重排根据函数调用关系与访问模式，重新排列函数在内存中的布局，以高缓存命中率\n热函数：频繁执行，对程序性能影响较大的函数\n代码去重检测并消除二进制代码中的重复部分\n弱符号链接处理符号冲突，在链接时，存在同名弱符号与普通符号（强符号），链接器将忽略弱符号\n链接时优化在链接阶段进行分析和优化，实现跨编译单元的优化\n\n函数内敛决策\n分析程序数据流与控制流，检测并消除死代码\n跨模块常量传播\n跨模块重复代码消除\n\n动态加载技术懒加载：在程序运行时，根据需要动态地加载程序的部分内容，提高程序的响应速度和资源利用率\n静态链接优化函数粒度链接，库剪裁，代码去重\n符号局部化限制符号作用域：静态修饰符、内联函数、匿名命名空间\n交叉优化技术指令集优化、处理器类型优化、操作系统优化、应用程序二进制接口（ABI）兼容性\n参考https://blog.csdn.net/qq_21438461/article/details/130243914\n","slug":"linux/op","date":"2023-12-02T20:00:29.000Z","categories_index":"coding","tags_index":"cpp","author_index":"NoleHuan"},{"id":"0929bbafa6d8a8be296315b76b958582","title":"cmake","content":"cmake命令add_compile_options 针对所有编译器添加编译选项，CMAKE_C_FLAGS 与 CMAKE_CXX_FLAGS 分别针对 c 和 c++ 编译器aux_source_directory(dir var) 将目录中的源文件保存在变量中include_directories(dir) 在目录中寻找头文件add_library(lib STATIC/SHARED src) 生成库set_target_properties 设置目标属性add_executable 生成可执行文件find_library 查找库target_link_Libraries 将库链接到可执行文件install 安装配置\n系统变量CMAKE_BUILD_TYPE 编译类型PROJECT_BINARY_DIR 执行 cmake 命令的目录PROJECT_SOURCE_DIR 工程根目录LIBRARY_OUTPUT_PATH 库文件生成目录EXECUTABLE_OUTPUT_PATH 可执行文件生成目录CMAKE_INSTALL_PREFIX 安装路径前缀，DESTINATION 指定绝对路径时无效\n12345678910111213141516171819202122232425262728293031323334353637$ cat CMakeLists.txt cmake_minimum_required(VERSION 2.8)project(cmake_demo)set(CMAKE_BUILD_TYPE Debug)add_compile_options(-std=c++11 -Wall -O2)# add_executable(demo main.cpp hello.cpp)# aux_source_directory(./src SRC)aux_source_directory(. MAIN)include_directories(./include)# add_library(hello_shared SHARED $&#123;SRC&#125;)# add_library(hello_static STATIC $&#123;SRC&#125;)# set_target_properties(hello_shared PROPERTIES OUTPUT_NAME &quot;hello_shared&quot;)# set_target_properties(hello_static PROPERTIES OUTPUT_NAME &quot;hello_static&quot;)# set(LIBRARY_OUTPUT_PATH $&#123;PROJECT_BINARY_DIR&#125;/../lib)# set(LIBRARY_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;/lib)# add_executable(demo $&#123;MAIN&#125; $&#123;SRC&#125;)find_library(LIB hello_shared $&#123;PROJECT_SOURCE_DIR&#125;/lib)set(EXECUTABLE_OUTPUT_PATH $&#123;PROJECT_SOURCE_DIR&#125;)add_executable(demo $&#123;MAIN&#125;)target_link_Libraries(demo $&#123;LIB&#125;)set(CMAKE_INSTALL_PREFIX $&#123;PROJECT_SOURCE_DIR&#125;)install(TARGETS demo DESTINATION $&#123;PROJECT_SOURCE_DIR&#125;/install/)\n12345678910111213141516171819$ tree ..├── build│   ├── CMakeCache.txt│   ├── CMakeFiles│   ├── cmake_install.cmake│   └── Makefile├── CMakeLists.txt├── demo├── include│   └── hello.h├── lib│   ├── libhello_shared.so│   └── libhello_static.a├── main.cpp└── src    └── hello.cpp5 directories, 10 files\n参考https://blog.csdn.net/iuu77/article/details/129229361\n","slug":"cpp/cmake","date":"2023-12-02T16:30:29.000Z","categories_index":"coding","tags_index":"cpp,cmake","author_index":"NoleHuan"},{"id":"a411c58a70d71608d7e89379b3a77f8e","title":"strip","content":"动态库裁剪strip\n-s --strip-all 删除所有符号和重定位信息，.dynsym 和 .dynstr 表信息依然存在，用于动态链接库链接使用\n\n\ndetails\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan 10480 11月 26 18:32 libtest.so*$ readelf -s libtest.soSymbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 funcSymbol table &#x27;.symtab&#x27; contains 59 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 00000000000001c8     0 SECTION LOCAL  DEFAULT    1      2: 00000000000001f0     0 SECTION LOCAL  DEFAULT    2      3: 0000000000000230     0 SECTION LOCAL  DEFAULT    3      4: 0000000000000368     0 SECTION LOCAL  DEFAULT    4      5: 0000000000000406     0 SECTION LOCAL  DEFAULT    5      6: 0000000000000420     0 SECTION LOCAL  DEFAULT    6      7: 0000000000000440     0 SECTION LOCAL  DEFAULT    7      8: 00000000000004e8     0 SECTION LOCAL  DEFAULT    8      9: 0000000000000500     0 SECTION LOCAL  DEFAULT    9     10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10     11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11     12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12     13: 0000000000000660     0 SECTION LOCAL  DEFAULT   13     14: 0000000000000669     0 SECTION LOCAL  DEFAULT   14     15: 0000000000000674     0 SECTION LOCAL  DEFAULT   15     16: 00000000000006a0     0 SECTION LOCAL  DEFAULT   16     17: 0000000000200e10     0 SECTION LOCAL  DEFAULT   17     18: 0000000000200e18     0 SECTION LOCAL  DEFAULT   18     19: 0000000000200e20     0 SECTION LOCAL  DEFAULT   19     20: 0000000000200fe0     0 SECTION LOCAL  DEFAULT   20     21: 0000000000201000     0 SECTION LOCAL  DEFAULT   21     22: 0000000000201020     0 SECTION LOCAL  DEFAULT   22     23: 0000000000201028     0 SECTION LOCAL  DEFAULT   23     24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24     25: 0000000000000000     0 SECTION LOCAL  DEFAULT   25     26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26     27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27     28: 0000000000000000     0 SECTION LOCAL  DEFAULT   28     29: 0000000000000000     0 SECTION LOCAL  DEFAULT   29     30: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    31: 0000000000000550     0 FUNC    LOCAL  DEFAULT   12 deregister_tm_clones    32: 0000000000000590     0 FUNC    LOCAL  DEFAULT   12 register_tm_clones    33: 00000000000005e0     0 FUNC    LOCAL  DEFAULT   12 __do_global_dtors_aux    34: 0000000000201028     1 OBJECT  LOCAL  DEFAULT   23 completed.7698    35: 0000000000200e18     0 OBJECT  LOCAL  DEFAULT   18 __do_global_dtors_aux_fin    36: 0000000000000620     0 FUNC    LOCAL  DEFAULT   12 frame_dummy    37: 0000000000200e10     0 OBJECT  LOCAL  DEFAULT   17 __frame_dummy_init_array_    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS libtest.c    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    40: 0000000000000738     0 OBJECT  LOCAL  DEFAULT   16 __FRAME_END__    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS     42: 0000000000201020     0 OBJECT  LOCAL  DEFAULT   22 __dso_handle    43: 0000000000200e20     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC    44: 0000000000000674     0 NOTYPE  LOCAL  DEFAULT   15 __GNU_EH_FRAME_HDR    45: 0000000000201028     0 OBJECT  LOCAL  DEFAULT   22 __TMC_END__    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_    47: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab    48: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add    49: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5    50: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata    51: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    52: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__    53: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func    54: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end    55: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    56: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable    57: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2    58: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init$ strip -s libtest.so$ readelf -s libtest.so Symbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan  6072 11月 30 21:40 libtest.so*\n\n\nfile 命令查看文件类型、架构、是否 stripped 等信息12345$ file libtest.so libtest.so.bk: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=3a6987a7f71f453637ab35daa89ec141fba9026b, with debug_info, not stripped$ strip -s libtest.so$ file libtest.solibtest.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=3a6987a7f71f453637ab35daa89ec141fba9026b, stripped\n\n-g -S -d --strip-debug 删除所有调试符号和段\n\n12345$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan 10480 11月 30 22:02 libtest.so*$ strip --strip-debug libtest.so$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan  7808 11月 30 22:03 libtest.so*\nSection Headers 与 Symbol table 中的以下信息被删除1234567891011121314151617...  [25] .debug_aranges    PROGBITS         0000000000000000  00001051       0000000000000030  0000000000000000           0     0     1  [26] .debug_info       PROGBITS         0000000000000000  00001081       000000000000035b  0000000000000000           0     0     1  [27] .debug_abbrev     PROGBITS         0000000000000000  000013dc       0000000000000109  0000000000000000           0     0     1  [28] .debug_line       PROGBITS         0000000000000000  000014e5       00000000000000d7  0000000000000000           0     0     1  [29] .debug_str        PROGBITS         0000000000000000  000015bc       0000000000000296  0000000000000001  MS       0     0     1...    30: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c...    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS libtest.c    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c...\n\ndetails\n\nreadelf -a libtest.soELF Header:  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00   Class:                             ELF64  Data:                              2&#x27;s complement, little endian  Version:                           1 (current)  OS/ABI:                            UNIX - System V  ABI Version:                       0  Type:                              DYN (Shared object file)  Machine:                           Advanced Micro Devices X86-64  Version:                           0x1  Entry point address:               0x550  Start of program headers:          64 (bytes into file)  Start of section headers:          8368 (bytes into file)  Flags:                             0x0  Size of this header:               64 (bytes)  Size of program headers:           56 (bytes)  Number of program headers:         7  Size of section headers:           64 (bytes)  Number of section headers:         33  Section header string table index: 32Section Headers:  [Nr] Name              Type             Address           Offset       Size              EntSize          Flags  Link  Info  Align  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0  [ 1] .note.gnu.build-i NOTE             00000000000001c8  000001c8       0000000000000024  0000000000000000   A       0     0     4  [ 2] .gnu.hash         GNU_HASH         00000000000001f0  000001f0       0000000000000040  0000000000000000   A       3     0     8  [ 3] .dynsym           DYNSYM           0000000000000230  00000230       0000000000000138  0000000000000018   A       4     1     8  [ 4] .dynstr           STRTAB           0000000000000368  00000368       000000000000009d  0000000000000000   A       0     0     1  [ 5] .gnu.version      VERSYM           0000000000000406  00000406       000000000000001a  0000000000000002   A       3     0     2  [ 6] .gnu.version_r    VERNEED          0000000000000420  00000420       0000000000000020  0000000000000000   A       4     1     8  [ 7] .rela.dyn         RELA             0000000000000440  00000440       00000000000000a8  0000000000000018   A       3     0     8  [ 8] .rela.plt         RELA             00000000000004e8  000004e8       0000000000000018  0000000000000018  AI       3    21     8  [ 9] .init             PROGBITS         0000000000000500  00000500       0000000000000017  0000000000000000  AX       0     0     4  [10] .plt              PROGBITS         0000000000000520  00000520       0000000000000020  0000000000000010  AX       0     0     16  [11] .plt.got          PROGBITS         0000000000000540  00000540       0000000000000008  0000000000000008  AX       0     0     8  [12] .text             PROGBITS         0000000000000550  00000550       000000000000010d  0000000000000000  AX       0     0     16  [13] .fini             PROGBITS         0000000000000660  00000660       0000000000000009  0000000000000000  AX       0     0     4  [14] .rodata           PROGBITS         0000000000000669  00000669       0000000000000008  0000000000000000   A       0     0     1  [15] .eh_frame_hdr     PROGBITS         0000000000000674  00000674       000000000000002c  0000000000000000   A       0     0     4  [16] .eh_frame         PROGBITS         00000000000006a0  000006a0       000000000000009c  0000000000000000   A       0     0     8  [17] .init_array       INIT_ARRAY       0000000000200e10  00000e10       0000000000000008  0000000000000008  WA       0     0     8  [18] .fini_array       FINI_ARRAY       0000000000200e18  00000e18       0000000000000008  0000000000000008  WA       0     0     8  [19] .dynamic          DYNAMIC          0000000000200e20  00000e20       00000000000001c0  0000000000000010  WA       4     0     8  [20] .got              PROGBITS         0000000000200fe0  00000fe0       0000000000000020  0000000000000008  WA       0     0     8  [21] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000020  0000000000000008  WA       0     0     8  [22] .data             PROGBITS         0000000000201020  00001020       0000000000000008  0000000000000000  WA       0     0     8  [23] .bss              NOBITS           0000000000201028  00001028       0000000000000008  0000000000000000  WA       0     0     1  [24] .comment          PROGBITS         0000000000000000  00001028       0000000000000029  0000000000000001  MS       0     0     1  [25] .debug_aranges    PROGBITS         0000000000000000  00001051       0000000000000030  0000000000000000           0     0     1  [26] .debug_info       PROGBITS         0000000000000000  00001081       000000000000035b  0000000000000000           0     0     1  [27] .debug_abbrev     PROGBITS         0000000000000000  000013dc       0000000000000109  0000000000000000           0     0     1  [28] .debug_line       PROGBITS         0000000000000000  000014e5       00000000000000d7  0000000000000000           0     0     1  [29] .debug_str        PROGBITS         0000000000000000  000015bc       0000000000000296  0000000000000001  MS       0     0     1  [30] .symtab           SYMTAB           0000000000000000  00001858       0000000000000588  0000000000000018          31    47     8  [31] .strtab           STRTAB           0000000000000000  00001de0       000000000000019b  0000000000000000           0     0     1  [32] .shstrtab         STRTAB           0000000000000000  00001f7b       0000000000000131  0000000000000000           0     0     1Key to Flags:  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),  L (link order), O (extra OS processing required), G (group), T (TLS),  C (compressed), x (unknown), o (OS specific), E (exclude),  l (large), p (processor specific)There are no section groups in this file.Program Headers:  Type           Offset             VirtAddr           PhysAddr                 FileSiz            MemSiz              Flags  Align  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x000000000000073c 0x000000000000073c  R E    0x200000  LOAD           0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x0000000000000218 0x0000000000000220  RW     0x200000  DYNAMIC        0x0000000000000e20 0x0000000000200e20 0x0000000000200e20                 0x00000000000001c0 0x00000000000001c0  RW     0x8  NOTE           0x00000000000001c8 0x00000000000001c8 0x00000000000001c8                 0x0000000000000024 0x0000000000000024  R      0x4  GNU_EH_FRAME   0x0000000000000674 0x0000000000000674 0x0000000000000674                 0x000000000000002c 0x000000000000002c  R      0x4  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x0000000000000000 0x0000000000000000  RW     0x10  GNU_RELRO      0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x00000000000001f0 0x00000000000001f0  R      0x1 Section to Segment mapping:  Segment Sections...   00     .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame    01     .init_array .fini_array .dynamic .got .got.plt .data .bss    02     .dynamic    03     .note.gnu.build-id    04     .eh_frame_hdr    05        06     .init_array .fini_array .dynamic .got Dynamic section at offset 0xe20 contains 24 entries:  Tag        Type                         Name/Value 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] 0x000000000000000c (INIT)               0x500 0x000000000000000d (FINI)               0x660 0x0000000000000019 (INIT_ARRAY)         0x200e10 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes) 0x000000000000001a (FINI_ARRAY)         0x200e18 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes) 0x000000006ffffef5 (GNU_HASH)           0x1f0 0x0000000000000005 (STRTAB)             0x368 0x0000000000000006 (SYMTAB)             0x230 0x000000000000000a (STRSZ)              157 (bytes) 0x000000000000000b (SYMENT)             24 (bytes) 0x0000000000000003 (PLTGOT)             0x201000 0x0000000000000002 (PLTRELSZ)           24 (bytes) 0x0000000000000014 (PLTREL)             RELA 0x0000000000000017 (JMPREL)             0x4e8 0x0000000000000007 (RELA)               0x440 0x0000000000000008 (RELASZ)             168 (bytes) 0x0000000000000009 (RELAENT)            24 (bytes) 0x000000006ffffffe (VERNEED)            0x420 0x000000006fffffff (VERNEEDNUM)         1 0x000000006ffffff0 (VERSYM)             0x406 0x000000006ffffff9 (RELACOUNT)          3 0x0000000000000000 (NULL)               0x0Relocation section &#x27;.rela.dyn&#x27; at offset 0x440 contains 7 entries:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000200e10  000000000008 R_X86_64_RELATIVE                    620000000200e18  000000000008 R_X86_64_RELATIVE                    5e0000000201020  000000000008 R_X86_64_RELATIVE                    201020000000200fe0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0000000200fe8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0000000200ff0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0000000200ff8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0Relocation section &#x27;.rela.plt&#x27; at offset 0x4e8 contains 1 entry:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000201018  000200000007 R_X86_64_JUMP_SLO 0000000000000000 puts@GLIBC_2.2.5 + 0The decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.Symbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 funcSymbol table &#x27;.symtab&#x27; contains 59 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 00000000000001c8     0 SECTION LOCAL  DEFAULT    1      2: 00000000000001f0     0 SECTION LOCAL  DEFAULT    2      3: 0000000000000230     0 SECTION LOCAL  DEFAULT    3      4: 0000000000000368     0 SECTION LOCAL  DEFAULT    4      5: 0000000000000406     0 SECTION LOCAL  DEFAULT    5      6: 0000000000000420     0 SECTION LOCAL  DEFAULT    6      7: 0000000000000440     0 SECTION LOCAL  DEFAULT    7      8: 00000000000004e8     0 SECTION LOCAL  DEFAULT    8      9: 0000000000000500     0 SECTION LOCAL  DEFAULT    9     10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10     11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11     12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12     13: 0000000000000660     0 SECTION LOCAL  DEFAULT   13     14: 0000000000000669     0 SECTION LOCAL  DEFAULT   14     15: 0000000000000674     0 SECTION LOCAL  DEFAULT   15     16: 00000000000006a0     0 SECTION LOCAL  DEFAULT   16     17: 0000000000200e10     0 SECTION LOCAL  DEFAULT   17     18: 0000000000200e18     0 SECTION LOCAL  DEFAULT   18     19: 0000000000200e20     0 SECTION LOCAL  DEFAULT   19     20: 0000000000200fe0     0 SECTION LOCAL  DEFAULT   20     21: 0000000000201000     0 SECTION LOCAL  DEFAULT   21     22: 0000000000201020     0 SECTION LOCAL  DEFAULT   22     23: 0000000000201028     0 SECTION LOCAL  DEFAULT   23     24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24     25: 0000000000000000     0 SECTION LOCAL  DEFAULT   25     26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26     27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27     28: 0000000000000000     0 SECTION LOCAL  DEFAULT   28     29: 0000000000000000     0 SECTION LOCAL  DEFAULT   29     30: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    31: 0000000000000550     0 FUNC    LOCAL  DEFAULT   12 deregister_tm_clones    32: 0000000000000590     0 FUNC    LOCAL  DEFAULT   12 register_tm_clones    33: 00000000000005e0     0 FUNC    LOCAL  DEFAULT   12 __do_global_dtors_aux    34: 0000000000201028     1 OBJECT  LOCAL  DEFAULT   23 completed.7698    35: 0000000000200e18     0 OBJECT  LOCAL  DEFAULT   18 __do_global_dtors_aux_fin    36: 0000000000000620     0 FUNC    LOCAL  DEFAULT   12 frame_dummy    37: 0000000000200e10     0 OBJECT  LOCAL  DEFAULT   17 __frame_dummy_init_array_    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS libtest.c    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    40: 0000000000000738     0 OBJECT  LOCAL  DEFAULT   16 __FRAME_END__    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS     42: 0000000000201020     0 OBJECT  LOCAL  DEFAULT   22 __dso_handle    43: 0000000000200e20     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC    44: 0000000000000674     0 NOTYPE  LOCAL  DEFAULT   15 __GNU_EH_FRAME_HDR    45: 0000000000201028     0 OBJECT  LOCAL  DEFAULT   22 __TMC_END__    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_    47: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab    48: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add    49: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5    50: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata    51: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    52: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__    53: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func    54: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end    55: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    56: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable    57: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2    58: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _initHistogram for `.gnu.hash&#x27; bucket list length (total of 3 buckets): Length  Number     % of total  Coverage      0  0          (  0.0%)      1  0          (  0.0%)      0.0%      2  2          ( 66.7%)     57.1%      3  1          ( 33.3%)    100.0%Version symbols section &#x27;.gnu.version&#x27; contains 13 entries: Addr: 0000000000000406  Offset: 0x000406  Link: 3 (.dynsym)  000:   0 (*local*)       0 (*local*)       2 (GLIBC_2.2.5)   0 (*local*)      004:   0 (*local*)       2 (GLIBC_2.2.5)   1 (*global*)      1 (*global*)     008:   1 (*global*)      1 (*global*)      1 (*global*)      1 (*global*)     00c:   1 (*global*)   Version needs section &#x27;.gnu.version_r&#x27; contains 1 entry: Addr: 0x0000000000000420  Offset: 0x000420  Link: 4 (.dynstr)  000000: Version: 1  File: libc.so.6  Cnt: 1  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 2Displaying notes found in: .note.gnu.build-id  Owner                 Data size\tDescription  GNU                  0x00000014\tNT_GNU_BUILD_ID (unique build ID bitstring)    Build ID: 3a6987a7f71f453637ab35daa89ec141fba9026b$ strip --strip-debug libtest.so$ readelf -a libtest.soELF Header:  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00   Class:                             ELF64  Data:                              2&#x27;s complement, little endian  Version:                           1 (current)  OS/ABI:                            UNIX - System V  ABI Version:                       0  Type:                              DYN (Shared object file)  Machine:                           Advanced Micro Devices X86-64  Version:                           0x1  Entry point address:               0x550  Start of program headers:          64 (bytes into file)  Start of section headers:          6016 (bytes into file)  Flags:                             0x0  Size of this header:               64 (bytes)  Size of program headers:           56 (bytes)  Number of program headers:         7  Size of section headers:           64 (bytes)  Number of section headers:         28  Section header string table index: 27Section Headers:  [Nr] Name              Type             Address           Offset       Size              EntSize          Flags  Link  Info  Align  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0  [ 1] .note.gnu.build-i NOTE             00000000000001c8  000001c8       0000000000000024  0000000000000000   A       0     0     4  [ 2] .gnu.hash         GNU_HASH         00000000000001f0  000001f0       0000000000000040  0000000000000000   A       3     0     8  [ 3] .dynsym           DYNSYM           0000000000000230  00000230       0000000000000138  0000000000000018   A       4     1     8  [ 4] .dynstr           STRTAB           0000000000000368  00000368       000000000000009d  0000000000000000   A       0     0     1  [ 5] .gnu.version      VERSYM           0000000000000406  00000406       000000000000001a  0000000000000002   A       3     0     2  [ 6] .gnu.version_r    VERNEED          0000000000000420  00000420       0000000000000020  0000000000000000   A       4     1     8  [ 7] .rela.dyn         RELA             0000000000000440  00000440       00000000000000a8  0000000000000018   A       3     0     8  [ 8] .rela.plt         RELA             00000000000004e8  000004e8       0000000000000018  0000000000000018  AI       3    21     8  [ 9] .init             PROGBITS         0000000000000500  00000500       0000000000000017  0000000000000000  AX       0     0     4  [10] .plt              PROGBITS         0000000000000520  00000520       0000000000000020  0000000000000010  AX       0     0     16  [11] .plt.got          PROGBITS         0000000000000540  00000540       0000000000000008  0000000000000008  AX       0     0     8  [12] .text             PROGBITS         0000000000000550  00000550       000000000000010d  0000000000000000  AX       0     0     16  [13] .fini             PROGBITS         0000000000000660  00000660       0000000000000009  0000000000000000  AX       0     0     4  [14] .rodata           PROGBITS         0000000000000669  00000669       0000000000000008  0000000000000000   A       0     0     1  [15] .eh_frame_hdr     PROGBITS         0000000000000674  00000674       000000000000002c  0000000000000000   A       0     0     4  [16] .eh_frame         PROGBITS         00000000000006a0  000006a0       000000000000009c  0000000000000000   A       0     0     8  [17] .init_array       INIT_ARRAY       0000000000200e10  00000e10       0000000000000008  0000000000000008  WA       0     0     8  [18] .fini_array       FINI_ARRAY       0000000000200e18  00000e18       0000000000000008  0000000000000008  WA       0     0     8  [19] .dynamic          DYNAMIC          0000000000200e20  00000e20       00000000000001c0  0000000000000010  WA       4     0     8  [20] .got              PROGBITS         0000000000200fe0  00000fe0       0000000000000020  0000000000000008  WA       0     0     8  [21] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000020  0000000000000008  WA       0     0     8  [22] .data             PROGBITS         0000000000201020  00001020       0000000000000008  0000000000000000  WA       0     0     8  [23] .bss              NOBITS           0000000000201028  00001028       0000000000000008  0000000000000000  WA       0     0     1  [24] .comment          PROGBITS         0000000000000000  00001028       0000000000000029  0000000000000001  MS       0     0     1  [25] .symtab           SYMTAB           0000000000000000  00001058       00000000000004b0  0000000000000018          26    38     8  [26] .strtab           STRTAB           0000000000000000  00001508       0000000000000186  0000000000000000           0     0     1  [27] .shstrtab         STRTAB           0000000000000000  0000168e       00000000000000f1  0000000000000000           0     0     1Key to Flags:  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),  L (link order), O (extra OS processing required), G (group), T (TLS),  C (compressed), x (unknown), o (OS specific), E (exclude),  l (large), p (processor specific)There are no section groups in this file.Program Headers:  Type           Offset             VirtAddr           PhysAddr                 FileSiz            MemSiz              Flags  Align  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x000000000000073c 0x000000000000073c  R E    0x200000  LOAD           0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x0000000000000218 0x0000000000000220  RW     0x200000  DYNAMIC        0x0000000000000e20 0x0000000000200e20 0x0000000000200e20                 0x00000000000001c0 0x00000000000001c0  RW     0x8  NOTE           0x00000000000001c8 0x00000000000001c8 0x00000000000001c8                 0x0000000000000024 0x0000000000000024  R      0x4  GNU_EH_FRAME   0x0000000000000674 0x0000000000000674 0x0000000000000674                 0x000000000000002c 0x000000000000002c  R      0x4  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x0000000000000000 0x0000000000000000  RW     0x10  GNU_RELRO      0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x00000000000001f0 0x00000000000001f0  R      0x1 Section to Segment mapping:  Segment Sections...   00     .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame    01     .init_array .fini_array .dynamic .got .got.plt .data .bss    02     .dynamic    03     .note.gnu.build-id    04     .eh_frame_hdr    05        06     .init_array .fini_array .dynamic .got Dynamic section at offset 0xe20 contains 24 entries:  Tag        Type                         Name/Value 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] 0x000000000000000c (INIT)               0x500 0x000000000000000d (FINI)               0x660 0x0000000000000019 (INIT_ARRAY)         0x200e10 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes) 0x000000000000001a (FINI_ARRAY)         0x200e18 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes) 0x000000006ffffef5 (GNU_HASH)           0x1f0 0x0000000000000005 (STRTAB)             0x368 0x0000000000000006 (SYMTAB)             0x230 0x000000000000000a (STRSZ)              157 (bytes) 0x000000000000000b (SYMENT)             24 (bytes) 0x0000000000000003 (PLTGOT)             0x201000 0x0000000000000002 (PLTRELSZ)           24 (bytes) 0x0000000000000014 (PLTREL)             RELA 0x0000000000000017 (JMPREL)             0x4e8 0x0000000000000007 (RELA)               0x440 0x0000000000000008 (RELASZ)             168 (bytes) 0x0000000000000009 (RELAENT)            24 (bytes) 0x000000006ffffffe (VERNEED)            0x420 0x000000006fffffff (VERNEEDNUM)         1 0x000000006ffffff0 (VERSYM)             0x406 0x000000006ffffff9 (RELACOUNT)          3 0x0000000000000000 (NULL)               0x0Relocation section &#x27;.rela.dyn&#x27; at offset 0x440 contains 7 entries:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000200e10  000000000008 R_X86_64_RELATIVE                    620000000200e18  000000000008 R_X86_64_RELATIVE                    5e0000000201020  000000000008 R_X86_64_RELATIVE                    201020000000200fe0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0000000200fe8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0000000200ff0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0000000200ff8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0Relocation section &#x27;.rela.plt&#x27; at offset 0x4e8 contains 1 entry:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000201018  000200000007 R_X86_64_JUMP_SLO 0000000000000000 puts@GLIBC_2.2.5 + 0The decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.Symbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 funcSymbol table &#x27;.symtab&#x27; contains 50 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000550     0 FUNC    LOCAL  DEFAULT   12 deregister_tm_clones     2: 0000000000000590     0 FUNC    LOCAL  DEFAULT   12 register_tm_clones     3: 00000000000005e0     0 FUNC    LOCAL  DEFAULT   12 __do_global_dtors_aux     4: 0000000000201028     1 OBJECT  LOCAL  DEFAULT   23 completed.7698     5: 0000000000200e18     0 OBJECT  LOCAL  DEFAULT   18 __do_global_dtors_aux_fin     6: 0000000000000620     0 FUNC    LOCAL  DEFAULT   12 frame_dummy     7: 0000000000200e10     0 OBJECT  LOCAL  DEFAULT   17 __frame_dummy_init_array_     8: 0000000000000738     0 OBJECT  LOCAL  DEFAULT   16 __FRAME_END__     9: 0000000000201020     0 OBJECT  LOCAL  DEFAULT   22 __dso_handle    10: 0000000000200e20     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC    11: 0000000000000674     0 NOTYPE  LOCAL  DEFAULT   15 __GNU_EH_FRAME_HDR    12: 0000000000201028     0 OBJECT  LOCAL  DEFAULT   22 __TMC_END__    13: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_    14: 00000000000001c8     0 SECTION LOCAL  DEFAULT    1     15: 00000000000001f0     0 SECTION LOCAL  DEFAULT    2     16: 0000000000000230     0 SECTION LOCAL  DEFAULT    3     17: 0000000000000368     0 SECTION LOCAL  DEFAULT    4     18: 0000000000000406     0 SECTION LOCAL  DEFAULT    5     19: 0000000000000420     0 SECTION LOCAL  DEFAULT    6     20: 0000000000000440     0 SECTION LOCAL  DEFAULT    7     21: 00000000000004e8     0 SECTION LOCAL  DEFAULT    8     22: 0000000000000500     0 SECTION LOCAL  DEFAULT    9     23: 0000000000000520     0 SECTION LOCAL  DEFAULT   10     24: 0000000000000540     0 SECTION LOCAL  DEFAULT   11     25: 0000000000000550     0 SECTION LOCAL  DEFAULT   12     26: 0000000000000660     0 SECTION LOCAL  DEFAULT   13     27: 0000000000000669     0 SECTION LOCAL  DEFAULT   14     28: 0000000000000674     0 SECTION LOCAL  DEFAULT   15     29: 00000000000006a0     0 SECTION LOCAL  DEFAULT   16     30: 0000000000200e10     0 SECTION LOCAL  DEFAULT   17     31: 0000000000200e18     0 SECTION LOCAL  DEFAULT   18     32: 0000000000200e20     0 SECTION LOCAL  DEFAULT   19     33: 0000000000200fe0     0 SECTION LOCAL  DEFAULT   20     34: 0000000000201000     0 SECTION LOCAL  DEFAULT   21     35: 0000000000201020     0 SECTION LOCAL  DEFAULT   22     36: 0000000000201028     0 SECTION LOCAL  DEFAULT   23     37: 0000000000000000     0 SECTION LOCAL  DEFAULT   24     38: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab    39: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add    40: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5    41: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata    42: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    43: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__    44: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func    45: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end    46: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    47: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable    48: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2    49: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _initHistogram for `.gnu.hash&#x27; bucket list length (total of 3 buckets): Length  Number     % of total  Coverage      0  0          (  0.0%)      1  0          (  0.0%)      0.0%      2  2          ( 66.7%)     57.1%      3  1          ( 33.3%)    100.0%Version symbols section &#x27;.gnu.version&#x27; contains 13 entries: Addr: 0000000000000406  Offset: 0x000406  Link: 3 (.dynsym)  000:   0 (*local*)       0 (*local*)       2 (GLIBC_2.2.5)   0 (*local*)      004:   0 (*local*)       2 (GLIBC_2.2.5)   1 (*global*)      1 (*global*)     008:   1 (*global*)      1 (*global*)      1 (*global*)      1 (*global*)     00c:   1 (*global*)   Version needs section &#x27;.gnu.version_r&#x27; contains 1 entry: Addr: 0x0000000000000420  Offset: 0x000420  Link: 4 (.dynstr)  000000: Version: 1  File: libc.so.6  Cnt: 1  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 2Displaying notes found in: .note.gnu.build-id  Owner                 Data size\tDescription  GNU                  0x00000014\tNT_GNU_BUILD_ID (unique build ID bitstring)    Build ID: 3a6987a7f71f453637ab35daa89ec141fba9026b\n\n\n\n--strip-unneeded 删除重定位不需要的符号\n\n1234567891011121314151617181920$ strip --strip-unneeded libtest.so$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan  6072 12月  2 13:49 libtest.so*$ readelf -s libtest.soSymbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func\n符号表 .symtab 通常包含动态符号表中 .dynsym 的全部符号，在程序编译过程中必须存在，运行时不必存在\n重定位通常由链接器在链接时完成，也可以在加载时由重定位加载程序完成，或者在运行时由正在运行的程序本身完成\ngcc-s 效果与 strip -s 相同，删除符号表与重定位信息123$ gcc -fPIC -shared -o libtest.so libtest.c -g -s$ ll | grep libtest.so-rwxrwxr-x 1 nolehuan nolehuan  6072 12月  2 15:22 libtest.so*\ngcc 去掉参数 -g 相当于 strip --strip-debug\ncmake不添加 -g 编译选项，编译类型设置 Release12add_compile_options(-std=c++11 -Wall -O2 -g)set(CMAKE_BUILD_TYPE Debug)\nmake install/strip 命令安装123456$ make install$ ll-rwxr-xr-x 1 nolehuan nolehuan 36088 12月  2 19:23 demo*$ make install/strip$ ll-rwxr-xr-x 1 nolehuan nolehuan 10216 12月  2 19:23 demo*\nLTOLink Time Optimization 链接时优化\n在链接阶段进行分析和优化，实现跨编译单元的优化\n\n函数内敛决策\n分析程序数据流与控制流，检测并消除死代码\n跨模块常量传播\n跨模块重复代码消除\n\n12set(CMAKE_C_FLAGS &quot;$&#123;CMAKE_C_FLAGS&#125; -flto&quot;)set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -flto&quot;)\n1234567$ ll-rwxrwxr-x 1 nolehuan nolehuan 36088 12月  3 10:16 demo*$ vim CMakeLists.txt$ cd build/$ make$ ll-rwxrwxr-x 1 nolehuan nolehuan 16968 12月  3 10:16 demo*\nGC sections链接器对无用 section 进行垃圾回收编译器参数 -ffunction-sections 与 -fdata-sections，将每个变量和函数分别放到独立的 section 中\nbar.c123456789#include &lt;stdio.h&gt;void bar() &#123;  printf(&quot;bar\\n&quot;);&#125;void baz() &#123;  printf(&quot;baz\\n&quot;);&#125;foo.c12345void bar();void foo() &#123;  bar();&#125;vis.map123456&#123;  global:    foo;  local:    *;&#125;;编译12345678910111213141516171819202122232425$ gcc -c -ffunction-sections foo.c$ gcc -c -ffunction-sections bar.c$ gcc -Wl,--version-script,vis.map -shared -o libfoo.so foo.o bar.o$ nm -D libfoo.so                  w __cxa_finalize000000000000054a T foo                 w __gmon_start__                 w _ITM_deregisterTMCloneTable                 w _ITM_registerTMCloneTable                 U puts$ objdump -d libfoo.so...000000000000054a &lt;foo&gt;:... 000000000000055b &lt;bar&gt;:...000000000000056e &lt;baz&gt;:...$ gcc -Wl,--version-script,vis.map -Wl,--gc-sections -shared -o libfoo.so foo.o bar.o$ objdump -d libfoo.so...000000000000054a &lt;foo&gt;:...000000000000055b &lt;bar&gt;:...\nupx开源跨平台的压缩壳，文件大于 40KB 可压缩\n1234567891011121314$ cat demo.c #include &lt;stdio.h&gt;#include &lt;time.h&gt;void getNow() &#123;  time_t now;  time(&amp;now);  printf(&quot;%ld\\n&quot;, now);&#125;int main() &#123;  getNow();  return 0;&#125;\n-1 快速压缩123456789101112131415161718$ gcc -static -o demo demo.c$ ll -h-rwxrwxr-x 1 nolehuan nolehuan 826K 12月  3 09:49 demo*-rw-rw-r-- 1 nolehuan nolehuan  148 12月  3 09:49 demo.c$ upx -1 demo                       Ultimate Packer for eXecutables                          Copyright (C) 1996 - 2017UPX 3.94        Markus Oberhumer, Laszlo Molnar &amp; John Reiser   May 12th 2017        File size         Ratio      Format      Name   --------------------   ------   -----------   -----------    845304 -&gt;    377620   44.67%   linux/amd64   demo                          Packed 1 file.$ ./demo1701568199$ ll -h-rwxrwxr-x 1 nolehuan nolehuan 369K 12月  3 09:49 demo*\n符号局部化\nstatic 关键字\n\n控制编译器将变量存储在静态存储区\n修饰局部变量，仅初始化一次，延长生命周期至程序运行结束u\n修饰全局变量，只能在本文件中访问，不可以 extern 外部声明\n修饰函数，只能在本文件调用\n\n使用 version script 控制符号可见性，指定动态库导出符号\n\n123456&#123;  global:    foo;  local:    *;&#125;;\n\nhidden\n\ngcc 编译参数 -fvisibility=default|internal|hidden|protectedhidden 符号对外隐藏，只能在同一共享对象中引用default 具有外部链接性，可能被重写internal 外部无法直接引用，可以通过指针间接引用protected 可以引用，无法重写对函数设置 __attribute__((visibility(&quot;default&quot;))) 优先级高于编译参数\n\ncode\n\nhello.h\n123456789101112#pragma once#include &lt;iostream&gt;class Hello &#123;  public:    void print();&#125;;void __attribute__((visibility(&quot;hidden&quot;))) foo();// void foo();\nhello.cpp\n123456789#include &quot;hello.h&quot;void Hello::print() &#123;  std::cout &lt;&lt; &quot;hello&quot; &lt;&lt; std::endl;&#125;void foo() &#123;  printf(&quot;foo\\n&quot;);&#125;\nmain.cpp\n123456789#include &quot;hello.h&quot;int main()&#123;  std::cout &lt;&lt; &quot;demo&quot; &lt;&lt; std::endl;  Hello h;  h.print();  foo();  return 0;&#125;\n\n\n1234567891011121314$ g++ -fPIC -shared -o libhello.so hello.cpp -g$ g++ -o main main.cpp -L . -lhello$ ./main demohellofoo$ vim hello.h$ g++ -fPIC -shared -o libhello.so hello.cpp -g$ g++ -o main main.cpp -L . -lhello/tmp/cch6S9Rd.o: In function `main&#x27;:main.cpp:(.text+0x4c): undefined reference to `foo()&#x27;/usr/bin/ld: main: hidden symbol `_Z3foov&#x27; isn&#x27;t defined/usr/bin/ld: final link failed: Bad valuecollect2: error: ld returned 1 exit status\n动态库合并合并后可删除部分动态符号表项、程序链接表（Procedure Linkage Table，PLT）表项、全局偏移表（Global Offset Table，GOT）表项\n参考Ziegler, A. ,  Geus, J. ,  Heinloth, B. , Timo HÖnig, &amp;  Lohmann, D. . (2019). Honey, i shrunk the elfs: lightweight binary tailoring of shared libraries. ACM Transactions on Embedded Computing Systems, 18(5s), 1-23.https://zhuanlan.zhihu.com/p/640026481https://zhuanlan.zhihu.com/p/596165659https://zhuanlan.zhihu.com/p/72475595https://blog.csdn.net/qq_21438461/article/details/130243914https://stackoverflow.com/questions/76138138/remove-unused-functions-from-shared-library\n","slug":"linux/strip","date":"2023-11-30T21:20:29.000Z","categories_index":"script","tags_index":"shell,so","author_index":"NoleHuan"},{"id":"6c7ebfa27e3441c41e8e3de672151141","title":"ptp","content":"时钟\nUNIX 从1970年1月1日开始所经过的秒数\n\nCLOCK_REALTIME 系统实时时间，UNIX 时间\n\nCLOCK_MONOTONIC 系统单调时间，系统启动后经过的秒数\n\n\n查看硬件支持ifconfig 查看网卡\n123456789101112131415161718$ ifconfiglo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;        loop  txqueuelen 1000  (Local Loopback)        RX packets 1500  bytes 180446 (180.4 KB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 1500  bytes 180446 (180.4 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0wlp0s20f3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 192.168.99.101  netmask 255.255.255.0  broadcast 192.168.99.255        inet6 fe80::f40b:3351:553f:66ba  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 08:71:90:3c:dc:05  txqueuelen 1000  (Ethernet)        RX packets 34174  bytes 42219505 (42.2 MB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 16487  bytes 2915006 (2.9 MB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nethtool -T wlp0s20f3 查看网卡是否支持 PTP 同步\n12345678$ ethtool -T wlp0s20f3Time stamping parameters for wlp0s20f3:Capabilities:\tsoftware-receive      (SOF_TIMESTAMPING_RX_SOFTWARE)\tsoftware-system-clock (SOF_TIMESTAMPING_SOFTWARE)PTP Hardware Clock: noneHardware Transmit Timestamp Modes: noneHardware Receive Filter Modes: none\nPTP Hardware Clock: none 网卡不支持 PTP 同步\nPTP 同步开始同步前建议关闭 WIFI\n\n主钟\n\nsudo ptp4l -i eno1 -m -H-i 网卡设备-m 将消息打印到标准输出-H 硬件时间戳\nsudo phc2sys -c eno1 -s CLOCK_REALTIME -w -m 将系统时钟同步到网卡的 PTP 硬件时钟-c 从时钟，默认 CLOCK_REALTIME-s 主时钟-w 等待 ptp4l-m 将消息打印到标准输出\n\n从钟\n\nsudo ptp4l -i eno1 -m -H -s-s 从时钟模式\nsudo phc2sys -s eno1 -w -m 将网卡的 PTP 硬件时钟同步到系统时钟\n","slug":"linux/ptp","date":"2023-11-29T21:26:29.000Z","categories_index":"tool","tags_index":"time","author_index":"NoleHuan"},{"id":"ce97a94626317b127a6da02030ff4c21","title":"shell","content":"du统计当前目录以及子目录所占磁盘空间大小-h –human-readable-s 仅显示当前目录\n123456$ du -h68K\t./src/so144K\t./src380K\t./upx32K\t./op1.2M\t.\nps\nps -aux\n\n12345$ ps -auxUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDroot         1  0.2  0.1 225748  9368 ?        Ss   21:28   0:01 /sbin/init splashroot         2  0.0  0.0      0     0 ?        S    21:28   0:00 [kthreadd]root         3  0.0  0.0      0     0 ?        I&lt;   21:28   0:00 [rcu_gp]\na 显示终端上的所有进程u 显示进程用户x 显示所有终端的进程\n\nps -elf\n\n12345$ ps -elfF S UID        PID  PPID  C PRI  NI ADDR SZ WCHAN  STIME TTY          TIME CMD4 S root         1     0  0  80   0 - 56437 -      21:28 ?        00:00:02 /sbin/init splash1 S root         2     0  0  80   0 -     0 -      21:28 ?        00:00:00 [kthreadd]1 I root         3     2  0  60 -20 -     0 -      21:28 ?        00:00:00 [rcu_gp]\ne 显示系统内的所有进程信息l 使用长格式显示进程信息f 使用完整格式显示进程信息\npidof查找指定进程名的进程 PID12345$ ps -elf | grep hexo0 S nolehuan  3670  3581  0  80   0 - 243195 ep_pol 21:41 pts/1   00:00:02 hexo0 S nolehuan  4297  3502  0  80   0 -  4221 pipe_w 21:52 pts/0    00:00:00 grep --color=auto hexo$ pidof hexo3670\nfindfind -name &#39;*.sh&#39; 查找当前目录及子目录下 sh 结尾的文件\nkillkill -9 pid 杀死进程\nmkdir-p 递归创建文件夹\nln创建软链接\n12345$ ln -snf src lsrc$ lltotal 36lrwxrwxrwx 1 nolehuan nolehuan    3 12月  9 16:06 lsrc -&gt; src/drwxrwxr-x 3 nolehuan nolehuan 4096 12月  2 20:20 src/\ntartar czvf dst src 压缩\ntar xzvf src 解压缩\ntop1 t t m m\n123456789101112131415161718192021222324$ toptop - 15:50:27 up  2:46,  1 user,  load average: 0.32, 0.38, 0.49Tasks: 358 total,   1 running, 290 sleeping,   0 stopped,   0 zombie%Cpu0  :   0.0/0.0     0[                                                                          ]%Cpu1  :   2.6/0.0     3[||                                                                        ]%Cpu2  :   2.6/0.0     3[||                                                                        ]%Cpu3  :   2.5/0.0     2[||                                                                        ]%Cpu4  :   0.0/0.0     0[                                                                          ]%Cpu5  :   2.7/0.0     3[||                                                                        ]%Cpu6  :  15.0/7.5    22[|||||||||||||||||                                                         ]%Cpu7  :   0.0/0.0     0[                                                                          ]KiB Mem : 52.5/7886744  [||||||||||||||||||||||||||||||||||||||                                    ]KiB Swap:  0.1/10000380 [                                                                          ]  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND 1603 nolehuan  20   0 4453592 426660 126952 S  13.5  5.4  12:35.93 gnome-shell10574 nolehuan  20   0   46800   4068   3340 R   8.1  0.1   0:00.10 top 2867 nolehuan  20   0 3077040 386272 122580 S   5.4  4.9   2:06.11 Isolated Web Co 1625 nolehuan   9 -11 2910064  17836  13740 S   2.7  0.2   9:30.49 pulseaudio 1646 nolehuan  20   0  360204  15064   6564 S   2.7  0.2   0:55.57 ibus-daemon 2622 nolehuan  20   0 5061640 803796 302676 S   2.7 10.2  34:42.42 firefox 3894 nolehuan  20   0  761120  71816  44236 S   2.7  0.9   0:14.24 terminator 4988 nolehuan  20   0 32.431g 208660 115372 S   2.7  2.6   3:28.31 code\ntop -H -p 查看指定进程的线程\nrsyncrsync -av -P src dst 复制文件\n12345678910111213141516171819$ rsync -av -P op/ ./tmpsending incremental file listcreated directory ./tmp./bar.c             89 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=5/7)bar.o          1,944 100%    1.85MB/s    0:00:00 (xfr#2, to-chk=4/7)foo.c             37 100%   36.13kB/s    0:00:00 (xfr#3, to-chk=3/7)foo.o          1,496 100%    1.43MB/s    0:00:00 (xfr#4, to-chk=2/7)libfoo.so          7,952 100%    7.58MB/s    0:00:00 (xfr#5, to-chk=1/7)vis.map             40 100%   39.06kB/s    0:00:00 (xfr#6, to-chk=0/7)sent 11,980 bytes  received 161 bytes  24,282.00 bytes/sectotal size is 11,558  speedup is 0.95\nreadelfelf 文件\n\n可执行文件 .out\n共享目标文件 .a\n可重定位文件 .so\n\n参数-a 显示全部信息-h 显示文件头信息 ELF Header-l 显示程序头信息 Program Headers-S 显示节头信息 Section Headers-g 显示节组信息-s 显示符号表段中的项 Symbol table-n 显示内核注释信息-r 显示可重定位段的信息 Relocation section-d 显示动态段信息 Dynamic section-V 显示版本段信息\n\ndetails\n\nreadelf -a libtest.soELF Header:  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00   Class:                             ELF64  Data:                              2&#x27;s complement, little endian  Version:                           1 (current)  OS/ABI:                            UNIX - System V  ABI Version:                       0  Type:                              DYN (Shared object file)  Machine:                           Advanced Micro Devices X86-64  Version:                           0x1  Entry point address:               0x550  Start of program headers:          64 (bytes into file)  Start of section headers:          8368 (bytes into file)  Flags:                             0x0  Size of this header:               64 (bytes)  Size of program headers:           56 (bytes)  Number of program headers:         7  Size of section headers:           64 (bytes)  Number of section headers:         33  Section header string table index: 32Section Headers:  [Nr] Name              Type             Address           Offset       Size              EntSize          Flags  Link  Info  Align  [ 0]                   NULL             0000000000000000  00000000       0000000000000000  0000000000000000           0     0     0  [ 1] .note.gnu.build-i NOTE             00000000000001c8  000001c8       0000000000000024  0000000000000000   A       0     0     4  [ 2] .gnu.hash         GNU_HASH         00000000000001f0  000001f0       0000000000000040  0000000000000000   A       3     0     8  [ 3] .dynsym           DYNSYM           0000000000000230  00000230       0000000000000138  0000000000000018   A       4     1     8  [ 4] .dynstr           STRTAB           0000000000000368  00000368       000000000000009d  0000000000000000   A       0     0     1  [ 5] .gnu.version      VERSYM           0000000000000406  00000406       000000000000001a  0000000000000002   A       3     0     2  [ 6] .gnu.version_r    VERNEED          0000000000000420  00000420       0000000000000020  0000000000000000   A       4     1     8  [ 7] .rela.dyn         RELA             0000000000000440  00000440       00000000000000a8  0000000000000018   A       3     0     8  [ 8] .rela.plt         RELA             00000000000004e8  000004e8       0000000000000018  0000000000000018  AI       3    21     8  [ 9] .init             PROGBITS         0000000000000500  00000500       0000000000000017  0000000000000000  AX       0     0     4  [10] .plt              PROGBITS         0000000000000520  00000520       0000000000000020  0000000000000010  AX       0     0     16  [11] .plt.got          PROGBITS         0000000000000540  00000540       0000000000000008  0000000000000008  AX       0     0     8  [12] .text             PROGBITS         0000000000000550  00000550       000000000000010d  0000000000000000  AX       0     0     16  [13] .fini             PROGBITS         0000000000000660  00000660       0000000000000009  0000000000000000  AX       0     0     4  [14] .rodata           PROGBITS         0000000000000669  00000669       0000000000000008  0000000000000000   A       0     0     1  [15] .eh_frame_hdr     PROGBITS         0000000000000674  00000674       000000000000002c  0000000000000000   A       0     0     4  [16] .eh_frame         PROGBITS         00000000000006a0  000006a0       000000000000009c  0000000000000000   A       0     0     8  [17] .init_array       INIT_ARRAY       0000000000200e10  00000e10       0000000000000008  0000000000000008  WA       0     0     8  [18] .fini_array       FINI_ARRAY       0000000000200e18  00000e18       0000000000000008  0000000000000008  WA       0     0     8  [19] .dynamic          DYNAMIC          0000000000200e20  00000e20       00000000000001c0  0000000000000010  WA       4     0     8  [20] .got              PROGBITS         0000000000200fe0  00000fe0       0000000000000020  0000000000000008  WA       0     0     8  [21] .got.plt          PROGBITS         0000000000201000  00001000       0000000000000020  0000000000000008  WA       0     0     8  [22] .data             PROGBITS         0000000000201020  00001020       0000000000000008  0000000000000000  WA       0     0     8  [23] .bss              NOBITS           0000000000201028  00001028       0000000000000008  0000000000000000  WA       0     0     1  [24] .comment          PROGBITS         0000000000000000  00001028       0000000000000029  0000000000000001  MS       0     0     1  [25] .debug_aranges    PROGBITS         0000000000000000  00001051       0000000000000030  0000000000000000           0     0     1  [26] .debug_info       PROGBITS         0000000000000000  00001081       000000000000035b  0000000000000000           0     0     1  [27] .debug_abbrev     PROGBITS         0000000000000000  000013dc       0000000000000109  0000000000000000           0     0     1  [28] .debug_line       PROGBITS         0000000000000000  000014e5       00000000000000d7  0000000000000000           0     0     1  [29] .debug_str        PROGBITS         0000000000000000  000015bc       0000000000000296  0000000000000001  MS       0     0     1  [30] .symtab           SYMTAB           0000000000000000  00001858       0000000000000588  0000000000000018          31    47     8  [31] .strtab           STRTAB           0000000000000000  00001de0       000000000000019b  0000000000000000           0     0     1  [32] .shstrtab         STRTAB           0000000000000000  00001f7b       0000000000000131  0000000000000000           0     0     1Key to Flags:  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),  L (link order), O (extra OS processing required), G (group), T (TLS),  C (compressed), x (unknown), o (OS specific), E (exclude),  l (large), p (processor specific)There are no section groups in this file.Program Headers:  Type           Offset             VirtAddr           PhysAddr                 FileSiz            MemSiz              Flags  Align  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x000000000000073c 0x000000000000073c  R E    0x200000  LOAD           0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x0000000000000218 0x0000000000000220  RW     0x200000  DYNAMIC        0x0000000000000e20 0x0000000000200e20 0x0000000000200e20                 0x00000000000001c0 0x00000000000001c0  RW     0x8  NOTE           0x00000000000001c8 0x00000000000001c8 0x00000000000001c8                 0x0000000000000024 0x0000000000000024  R      0x4  GNU_EH_FRAME   0x0000000000000674 0x0000000000000674 0x0000000000000674                 0x000000000000002c 0x000000000000002c  R      0x4  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000                 0x0000000000000000 0x0000000000000000  RW     0x10  GNU_RELRO      0x0000000000000e10 0x0000000000200e10 0x0000000000200e10                 0x00000000000001f0 0x00000000000001f0  R      0x1 Section to Segment mapping:  Segment Sections...   00     .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame    01     .init_array .fini_array .dynamic .got .got.plt .data .bss    02     .dynamic    03     .note.gnu.build-id    04     .eh_frame_hdr    05        06     .init_array .fini_array .dynamic .got Dynamic section at offset 0xe20 contains 24 entries:  Tag        Type                         Name/Value 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] 0x000000000000000c (INIT)               0x500 0x000000000000000d (FINI)               0x660 0x0000000000000019 (INIT_ARRAY)         0x200e10 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes) 0x000000000000001a (FINI_ARRAY)         0x200e18 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes) 0x000000006ffffef5 (GNU_HASH)           0x1f0 0x0000000000000005 (STRTAB)             0x368 0x0000000000000006 (SYMTAB)             0x230 0x000000000000000a (STRSZ)              157 (bytes) 0x000000000000000b (SYMENT)             24 (bytes) 0x0000000000000003 (PLTGOT)             0x201000 0x0000000000000002 (PLTRELSZ)           24 (bytes) 0x0000000000000014 (PLTREL)             RELA 0x0000000000000017 (JMPREL)             0x4e8 0x0000000000000007 (RELA)               0x440 0x0000000000000008 (RELASZ)             168 (bytes) 0x0000000000000009 (RELAENT)            24 (bytes) 0x000000006ffffffe (VERNEED)            0x420 0x000000006fffffff (VERNEEDNUM)         1 0x000000006ffffff0 (VERSYM)             0x406 0x000000006ffffff9 (RELACOUNT)          3 0x0000000000000000 (NULL)               0x0Relocation section &#x27;.rela.dyn&#x27; at offset 0x440 contains 7 entries:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000200e10  000000000008 R_X86_64_RELATIVE                    620000000200e18  000000000008 R_X86_64_RELATIVE                    5e0000000201020  000000000008 R_X86_64_RELATIVE                    201020000000200fe0  000100000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0000000200fe8  000300000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0000000200ff0  000400000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0000000200ff8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0Relocation section &#x27;.rela.plt&#x27; at offset 0x4e8 contains 1 entry:  Offset          Info           Type           Sym. Value    Sym. Name + Addend000000201018  000200000007 R_X86_64_JUMP_SLO 0000000000000000 puts@GLIBC_2.2.5 + 0The decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.Symbol table &#x27;.dynsym&#x27; contains 13 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (2)     3: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)     6: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata     7: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end     8: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add     9: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    10: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _init    11: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    12: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 funcSymbol table &#x27;.symtab&#x27; contains 59 entries:   Num:    Value          Size Type    Bind   Vis      Ndx Name     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND      1: 00000000000001c8     0 SECTION LOCAL  DEFAULT    1      2: 00000000000001f0     0 SECTION LOCAL  DEFAULT    2      3: 0000000000000230     0 SECTION LOCAL  DEFAULT    3      4: 0000000000000368     0 SECTION LOCAL  DEFAULT    4      5: 0000000000000406     0 SECTION LOCAL  DEFAULT    5      6: 0000000000000420     0 SECTION LOCAL  DEFAULT    6      7: 0000000000000440     0 SECTION LOCAL  DEFAULT    7      8: 00000000000004e8     0 SECTION LOCAL  DEFAULT    8      9: 0000000000000500     0 SECTION LOCAL  DEFAULT    9     10: 0000000000000520     0 SECTION LOCAL  DEFAULT   10     11: 0000000000000540     0 SECTION LOCAL  DEFAULT   11     12: 0000000000000550     0 SECTION LOCAL  DEFAULT   12     13: 0000000000000660     0 SECTION LOCAL  DEFAULT   13     14: 0000000000000669     0 SECTION LOCAL  DEFAULT   14     15: 0000000000000674     0 SECTION LOCAL  DEFAULT   15     16: 00000000000006a0     0 SECTION LOCAL  DEFAULT   16     17: 0000000000200e10     0 SECTION LOCAL  DEFAULT   17     18: 0000000000200e18     0 SECTION LOCAL  DEFAULT   18     19: 0000000000200e20     0 SECTION LOCAL  DEFAULT   19     20: 0000000000200fe0     0 SECTION LOCAL  DEFAULT   20     21: 0000000000201000     0 SECTION LOCAL  DEFAULT   21     22: 0000000000201020     0 SECTION LOCAL  DEFAULT   22     23: 0000000000201028     0 SECTION LOCAL  DEFAULT   23     24: 0000000000000000     0 SECTION LOCAL  DEFAULT   24     25: 0000000000000000     0 SECTION LOCAL  DEFAULT   25     26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26     27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27     28: 0000000000000000     0 SECTION LOCAL  DEFAULT   28     29: 0000000000000000     0 SECTION LOCAL  DEFAULT   29     30: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    31: 0000000000000550     0 FUNC    LOCAL  DEFAULT   12 deregister_tm_clones    32: 0000000000000590     0 FUNC    LOCAL  DEFAULT   12 register_tm_clones    33: 00000000000005e0     0 FUNC    LOCAL  DEFAULT   12 __do_global_dtors_aux    34: 0000000000201028     1 OBJECT  LOCAL  DEFAULT   23 completed.7698    35: 0000000000200e18     0 OBJECT  LOCAL  DEFAULT   18 __do_global_dtors_aux_fin    36: 0000000000000620     0 FUNC    LOCAL  DEFAULT   12 frame_dummy    37: 0000000000200e10     0 OBJECT  LOCAL  DEFAULT   17 __frame_dummy_init_array_    38: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS libtest.c    39: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c    40: 0000000000000738     0 OBJECT  LOCAL  DEFAULT   16 __FRAME_END__    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS     42: 0000000000201020     0 OBJECT  LOCAL  DEFAULT   22 __dso_handle    43: 0000000000200e20     0 OBJECT  LOCAL  DEFAULT   19 _DYNAMIC    44: 0000000000000674     0 NOTYPE  LOCAL  DEFAULT   15 __GNU_EH_FRAME_HDR    45: 0000000000201028     0 OBJECT  LOCAL  DEFAULT   22 __TMC_END__    46: 0000000000201000     0 OBJECT  LOCAL  DEFAULT   21 _GLOBAL_OFFSET_TABLE_    47: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab    48: 000000000000063d    32 FUNC    GLOBAL DEFAULT   12 add    49: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5    50: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   22 _edata    51: 0000000000000660     0 FUNC    GLOBAL DEFAULT   13 _fini    52: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__    53: 000000000000062a    19 FUNC    GLOBAL DEFAULT   12 func    54: 0000000000201030     0 NOTYPE  GLOBAL DEFAULT   23 _end    55: 0000000000201028     0 NOTYPE  GLOBAL DEFAULT   23 __bss_start    56: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable    57: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2    58: 0000000000000500     0 FUNC    GLOBAL DEFAULT    9 _initHistogram for `.gnu.hash&#x27; bucket list length (total of 3 buckets): Length  Number     % of total  Coverage      0  0          (  0.0%)      1  0          (  0.0%)      0.0%      2  2          ( 66.7%)     57.1%      3  1          ( 33.3%)    100.0%Version symbols section &#x27;.gnu.version&#x27; contains 13 entries: Addr: 0000000000000406  Offset: 0x000406  Link: 3 (.dynsym)  000:   0 (*local*)       0 (*local*)       2 (GLIBC_2.2.5)   0 (*local*)      004:   0 (*local*)       2 (GLIBC_2.2.5)   1 (*global*)      1 (*global*)     008:   1 (*global*)      1 (*global*)      1 (*global*)      1 (*global*)     00c:   1 (*global*)   Version needs section &#x27;.gnu.version_r&#x27; contains 1 entry: Addr: 0x0000000000000420  Offset: 0x000420  Link: 4 (.dynstr)  000000: Version: 1  File: libc.so.6  Cnt: 1  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 2Displaying notes found in: .note.gnu.build-id  Owner                 Data size\tDescription  GNU                  0x00000014\tNT_GNU_BUILD_ID (unique build ID bitstring)    Build ID: 3a6987a7f71f453637ab35daa89ec141fba9026b\n\n\nsedsed -i &#39;s/from/to/g&#39; filename 替换文本内容\n123456$ echo &quot;ababa&quot; &gt; tmp$ cat tmpababa$ sed -i &#x27;s/a/c/g&#x27; tmp $ cat tmpcbcbc\nstress压测工具\n\nCPU 压测 sqrt()123$ stress -c 10 -t 10stress: info: [17965] dispatching hogs: 10 cpu, 0 io, 0 vm, 0 hddstress: info: [17965] successful run completed in 10s\n\n\n-c 进程数-t 压测持续时间\n\n内存压测 malloc()/free()123$ stress -m 3 --vm-bytes 521M --vm-keep -t 10stress: info: [18012] dispatching hogs: 0 cpu, 0 io, 3 vm, 0 hddqstress: info: [18012] successful run completed in 10s\n\n\n-m 进程数--vm-bytes 申请内存大小--vm-keep 持续占用内存，默认频繁申请释放内存\n\n磁盘压测 write()/unlink()1$ stress -d 3 --hdd-bytes 512M -t 10 &amp; sudo iotop\n\n\n-d 进程数--hdd-bytes 写数据量\n\nIO 压测 sync()1$ stress -i 3 -t 10 &amp; sudo iotop\n\n\niperf网络性能测试工具，带宽测试\n服务端 iperf -s客户端 iperf -c &lt;host&gt; -w 2m -t 30s -i 1host 服务端 IP 地址-w TCP 窗口大小-i 带宽报告间隔时间\ndiff123456789101112131415161718192021$ echo -e &quot;a\\nb\\nc\\nd&quot; &gt; a$ cat  aabcd$ echo -e &quot;aa\\nb\\nd\\ne&quot; &gt; b$ cat baabde$ diff a b1c1&lt; a---&gt; aa3d2&lt; c4a4&gt; e\necho -e 激活转义字符a addc changed delete&lt; 左文件文件内容1c1 修改左文件第一行与右文件匹配\ncurl抓取百度首页内容123456$ curl -o baidu.html http://www.baidu.com  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                 Dload  Upload   Total   Spent    Left  Speed100  2381  100  2381    0     0  41771      0 --:--:-- --:--:-- --:--:-- 41771$ ll```-rw-rw-r--  1 nolehuan nolehuan 2381 12月 10 17:28 baidu.html\n-o 输出文件名称\nawk1234567$ echo -e &quot;a,b,c\\nd,e,f&quot; &gt; tmp$ cat tmpa,b,cd,e,f$ cat tmp | awk -F, &#x27;&#123;print $2&#125;&#x27;be\n-F 分隔符，默认空格\ndmesg内核相关信息，启动日志，OOM 日志等123456$ dmesg -T | tail -f -n 5[日 12月 10 17:45:14 2023] wlp0s20f3: authenticated[日 12月 10 17:45:14 2023] wlp0s20f3: associate with 78:44:fd:1e:88:ac (try 1/3)[日 12月 10 17:45:14 2023] wlp0s20f3: RX ReassocResp from 78:44:fd:1e:88:ac (capab=0x1011 status=0 aid=1)[日 12月 10 17:45:14 2023] wlp0s20f3: associated[日 12月 10 18:05:56 2023] perf: interrupt took too long (6190 &gt; 6163), lowering kernel.perf_event_max_sample_rate to 32250\n-T 显示易读时间戳-f 监视文件增长\ngrep查询当前目录以及子目录下文件中的内容1234567$ grep -Rni nowtmp/tmp:1:nowdemo.c:4:void getNow() &#123;demo.c:5:  time_t now;demo.c:6:  time(&amp;now);demo.c:7:  printf(&quot;%ld\\n&quot;, now);demo.c:11:  getNow();\n-R 递归查找-n 显示行号-i 忽略大小写\npgrep根据进程名来查询进程 ID12345$ ./ptest &amp; pgrep ptest[1] 1309913099$ fg 1./ptest\nethtool查看网卡信息1234567891011$ ethtool -i wlp0s20f3driver: iwlwifiversion: 5.4.0-150-genericfirmware-version: 46.6bf1df06.0expansion-rom-version: bus-info: 0000:00:14.3supports-statistics: yessupports-test: nosupports-eeprom-access: nosupports-register-dump: nosupports-priv-flags: no\n-i 查看驱动信息\niftop12345678910111213141516171819$ sudo iftop -i wlp0s20f3interface: wlp0s20f3IP address is: 192.168.99.101MAC address is: 08:71:90:3c:dc:05$ sudo iftop -i wlp0s20f3 -t -s 3interface: wlp0s20f3IP address is: 192.168.99.101MAC address is: 08:71:90:3c:dc:05Listening on wlp0s20f3   # Host name (port/service if enabled)            last 2s   last 10s   last 40s cumulative----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Total send rate:                                         0b         0b         0bTotal receive rate:                                      0b         0b         0bTotal send and receive rate:                             0b         0b         0b--------------------------------------------------------------------------------------------Peak rate (sent/received/total):                         0b         0b         0bCumulative (sent/received/total):                        0B         0B         0B============================================================================================\n-i 指定监控网卡-t 文本界面-s n 秒后打印一次文本输出后退出\ntee将用户输入保存到文件123456789$ tee tmpxxyy^C$ cat tmpxy\n-a 追加\nobjdump目标文件反汇编工具-f 显示文件头信息-d 反汇编可执行节-D 反汇编所有节-h 显示节头内容-t 显示符号表内容\n1234567891011121314151617181920212223$ objdump -f pp:     file format elf64-x86-64architecture: i386:x86-64, flags 0x00000150:HAS_SYMS, DYNAMIC, D_PAGEDstart address 0x0000000000000c10$ objdump -d pp:     file format elf64-x86-64Disassembly of section .init:0000000000000b18 &lt;_init&gt;: b18:\t48 83 ec 08          \tsub    $0x8,%rsp b1c:\t48 8b 05 c5 24 20 00 \tmov    0x2024c5(%rip),%rax        # 202fe8 &lt;__gmon_start__&gt; b23:\t48 85 c0             \ttest   %rax,%rax b26:\t74 02                \tje     b2a &lt;_init+0x12&gt; b28:\tff d0                \tcallq  *%rax b2a:\t48 83 c4 08          \tadd    $0x8,%rsp b2e:\tc3                   \tretq...\ndd复制文件1234$ dd if=a of=b0+1 records in0+1 records out8 bytes copied, 0.000414869 s, 19.3 kB/s\nif 输入文件或设备of 输出文件或设备\n","slug":"linux/shell","date":"2023-11-28T21:30:29.000Z","categories_index":"script","tags_index":"shell","author_index":"NoleHuan"},{"id":"764bdd9ac479a79e4d1149181d7f0f7f","title":"asm","content":"lea 与 mov 的区别\nlea load effective address\n\n可以用来将一个内存地址直接赋给目的操作数，如 lea eax, [ebx+8] 将值 ebx+8 直接赋给 eax，而不是把内存地址 ebx+8 处的数据赋给 eax\n\nmov\n\nmov eax, [ebx+8] 将内存地址 ebx+8 处的数据赋给 eax\n参考https://www.zhihu.com/question/40720890/answer/110774673\n","slug":"linux/asm","date":"2023-11-27T21:30:29.000Z","categories_index":"coding","tags_index":"asm","author_index":"NoleHuan"},{"id":"dbb86e8f6a01395cf52e4238dc8be85a","title":"so","content":"使用 mv 与 cp 命令更新运行中的动态链接库是否会发生问题？cp 命令更新运行中的动态链接库会导致程序 core 掉？\nLinux 文件系统Linux 文件系统中，每个文件对应一个 inode 与 dentry\ninode硬盘分为两个区域：数据区与 inode table，inode 存储文件元信息，可以用 stat 命令查看\n123456789$ stat test.cpp   File: test.cpp  Size: 458       \tBlocks: 8          IO Block: 4096   regular fileDevice: 10307h/66311d\tInode: 535078      Links: 1Access: (0664/-rw-rw-r--)  Uid: ( 1000/nolehuan)   Gid: ( 1000/nolehuan)Access: 2023-11-04 15:20:56.725957003 +0800Modify: 2022-11-24 22:25:10.659748611 +0800Change: 2022-11-24 22:25:10.659748611 +0800 Birth: -\nLinks: 1 记录硬链接计数，硬链接仅文件名不同，inode 号相同；软链接文件数据块中存放对应文件的路径\nls -i 命令查看文件 inode 编号12$ ls -i test.cpp 535078 test.cpp\ndentrydirectory entry 记录文件的目录信息与 inode 指针，存在于内存中\n程序运行时，进程 pcb 中保存一份文件描述符表，文件描述符对应进程已打开文件的 file 结构体，file 结构体中包括文件打开时的标志位、引用计数和 dentry 指针等信息，通过 dentry 指针找到文件对应 inode 进而操作文件\ncp mv rm 原理执行 cp 命令时 inode 号分配规则\n\n目标文件存在则 inode 保持文件覆盖前的编号\n目标文件不存在则分配一个未使用的 inode 号，并添加至 inode table\n\n123456$ touch a b &amp;&amp; ls -i a b548015 a  560350 b$ cp a b &amp;&amp; ls -i a b548015 a  560350 b$ cp b c &amp;&amp; ls -i b c560350 b  584072 c\n执行 mv 命令时，所在文件系统相同则保持源文件 inode 号123456$ touch a b &amp;&amp; ls -i a b583955 a  584095 b$ mv a b &amp;&amp; ls -i b583955 b$ mv b c &amp;&amp; ls -i c583955 c\ncp 命令执行步骤\n\ninode 号分配\n新建 dentry 并指向 inode\n复制数据至 block 中\n\nrm 命令执行步骤\n\n递减硬链接计数，计数归零时释放 inode 号\n将数据块挂至空闲链表\n删除目录映射表中的相关行\n\nmv 命令执行步骤\n\n源文件与目标文件所在文件系统相同：新建 dentry，删除原 dentry，对 inode 无影响，不移动数据\n源文件与目标文件所在文件系统不同：cp + rm\n\nstrace 命令跟踪 cp 执行过程1234567891011121314151617$ cat afile a$ cat bfile b$ strace cp a b...openat(AT_FDCWD, &quot;a&quot;, O_RDONLY)         = 3fstat(3, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;b&quot;, O_WRONLY|O_TRUNC) = 4fstat(4, &#123;st_mode=S_IFREG|0664, st_size=0, ...&#125;) = 0...read(3, &quot;file a\\n&quot;, 131072)             = 7write(4, &quot;file a\\n&quot;, 7)                 = 7read(3, &quot;&quot;, 131072)                     = 0close(4)                                = 0close(3)                                = 0...\n\ndetails\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146$ strace cp a bexecve(&quot;/bin/cp&quot;, [&quot;cp&quot;, &quot;a&quot;, &quot;b&quot;], 0x7ffccded9d50 /* 78 vars */) = 0brk(NULL)                               = 0x55a404a95000access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/x86_64&quot;, 0x7ffcc58a7250) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib&quot;, &#123;st_mode=S_IFDIR|0755, st_size=36864, ...&#125;) = 0openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=223218, ...&#125;) = 0mmap(NULL, 223218, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f89809af000close(3)                                = 0access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\20b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=154832, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809ad000mmap(NULL, 2259152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f8980595000mprotect(0x7f89805ba000, 2093056, PROT_NONE) = 0mmap(0x7f89807b9000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x24000) = 0x7f89807b9000mmap(0x7f89807bb000, 6352, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f89807bb000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\340\\33\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=31232, ...&#125;) = 0mmap(NULL, 2126336, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f898038d000mprotect(0x7f8980394000, 2093056, PROT_NONE) = 0mmap(0x7f8980593000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x7f8980593000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\260\\20\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=18680, ...&#125;) = 0mmap(NULL, 2113752, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f8980188000mprotect(0x7f898018c000, 2093056, PROT_NONE) = 0mmap(0x7f898038b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f898038b000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\240\\35\\2\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=2030928, ...&#125;) = 0mmap(NULL, 4131552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897fd97000mprotect(0x7f897ff7e000, 2097152, PROT_NONE) = 0mmap(0x7f898017e000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7f898017e000mmap(0x7f8980184000, 15072, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f8980184000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0 \\25\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=460728, ...&#125;) = 0mmap(NULL, 2556168, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897fb26000mprotect(0x7f897fb96000, 2093056, PROT_NONE) = 0mmap(0x7f897fd95000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6f000) = 0x7f897fd95000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0P\\16\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=14560, ...&#125;) = 0mmap(NULL, 2109712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897f922000mprotect(0x7f897f925000, 2093056, PROT_NONE) = 0mmap(0x7f897fb24000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f897fb24000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0000b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=144976, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809ab000mmap(NULL, 2221184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f897f703000mprotect(0x7f897f71d000, 2093056, PROT_NONE) = 0mmap(0x7f897f91c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f897f91c000mmap(0x7f897f91e000, 13440, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f897f91e000close(3)                                = 0mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809a8000arch_prctl(ARCH_SET_FS, 0x7f89809a8800) = 0mprotect(0x7f898017e000, 16384, PROT_READ) = 0mprotect(0x7f897f91c000, 4096, PROT_READ) = 0mprotect(0x7f897fb24000, 4096, PROT_READ) = 0mprotect(0x7f897fd95000, 4096, PROT_READ) = 0mprotect(0x7f898038b000, 4096, PROT_READ) = 0mprotect(0x7f8980593000, 4096, PROT_READ) = 0mprotect(0x7f89807b9000, 4096, PROT_READ) = 0mprotect(0x55a403631000, 4096, PROT_READ) = 0mprotect(0x7f89809e6000, 4096, PROT_READ) = 0munmap(0x7f89809af000, 223218)          = 0set_tid_address(0x7f89809a8ad0)         = 5123set_robust_list(0x7f89809a8ae0, 24)     = 0rt_sigaction(SIGRTMIN, &#123;sa_handler=0x7f897f708cb0, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f897f715980&#125;, NULL, 8) = 0rt_sigaction(SIGRT_1, &#123;sa_handler=0x7f897f708d50, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f897f715980&#125;, NULL, 8) = 0rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0prlimit64(0, RLIMIT_STACK, NULL, &#123;rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY&#125;) = 0statfs(&quot;/sys/fs/selinux&quot;, 0x7ffcc58a7b60) = -1 ENOENT (No such file or directory)statfs(&quot;/selinux&quot;, 0x7ffcc58a7b60)      = -1 ENOENT (No such file or directory)brk(NULL)                               = 0x55a404a95000brk(0x55a404ab6000)                     = 0x55a404ab6000openat(AT_FDCWD, &quot;/proc/filesystems&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;) = 0read(3, &quot;nodev\\tsysfs\\nnodev\\ttmpfs\\nnodev\\tbd&quot;..., 1024) = 393read(3, &quot;&quot;, 1024)                       = 0close(3)                                = 0access(&quot;/etc/selinux/config&quot;, F_OK)     = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=5513488, ...&#125;) = 0mmap(NULL, 5513488, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f897f1c0000close(3)                                = 0geteuid()                               = 1000stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0stat(&quot;a&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;a&quot;, O_RDONLY)         = 3fstat(3, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0openat(AT_FDCWD, &quot;b&quot;, O_WRONLY|O_TRUNC) = 4fstat(4, &#123;st_mode=S_IFREG|0664, st_size=0, ...&#125;) = 0fadvise64(3, 0, 0, POSIX_FADV_SEQUENTIAL) = 0mmap(NULL, 139264, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f89809c4000read(3, &quot;file a\\n&quot;, 131072)             = 7write(4, &quot;file a\\n&quot;, 7)                 = 7read(3, &quot;&quot;, 131072)                     = 0close(4)                                = 0close(3)                                = 0munmap(0x7f89809c4000, 139264)          = 0lseek(0, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)close(0)                                = 0close(1)                                = 0close(2)                                = 0exit_group(0)                           = ?+++ exited with 0 +++\n\n\nstrace 命令跟踪 mv 执行过程12345678$ cat afile a$ cat bfile b$ strace mv a b...rename(&quot;a&quot;, &quot;b&quot;)                        = 0...\n\ndetails\n\n123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143$ strace mv a bexecve(&quot;/bin/mv&quot;, [&quot;mv&quot;, &quot;a&quot;, &quot;b&quot;], 0x7fffb37729b0 /* 78 vars */) = 0brk(NULL)                               = 0x55b38eebf000access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/haswell&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/tls/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/tls&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/haswell/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/haswell&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/x86_64/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib/x86_64&quot;, 0x7ffc2d702d20) = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)stat(&quot;/opt/ros/melodic/lib&quot;, &#123;st_mode=S_IFDIR|0755, st_size=36864, ...&#125;) = 0openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=223218, ...&#125;) = 0mmap(NULL, 223218, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f615a44d000close(3)                                = 0access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libselinux.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\20b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=154832, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a44b000mmap(NULL, 2259152, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f615a033000mprotect(0x7f615a058000, 2093056, PROT_NONE) = 0mmap(0x7f615a257000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x24000) = 0x7f615a257000mmap(0x7f615a259000, 6352, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f615a259000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\340\\33\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=31232, ...&#125;) = 0mmap(NULL, 2126336, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159e2b000mprotect(0x7f6159e32000, 2093056, PROT_NONE) = 0mmap(0x7f615a031000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6000) = 0x7f615a031000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\260\\20\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=18680, ...&#125;) = 0mmap(NULL, 2113752, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159c26000mprotect(0x7f6159c2a000, 2093056, PROT_NONE) = 0mmap(0x7f6159e29000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x3000) = 0x7f6159e29000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\3\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\240\\35\\2\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=2030928, ...&#125;) = 0mmap(NULL, 4131552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f6159835000mprotect(0x7f6159a1c000, 2097152, PROT_NONE) = 0mmap(0x7f6159c1c000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1e7000) = 0x7f6159c1c000mmap(0x7f6159c22000, 15072, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f6159c22000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpcre.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0 \\25\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=460728, ...&#125;) = 0mmap(NULL, 2556168, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61595c4000mprotect(0x7f6159634000, 2093056, PROT_NONE) = 0mmap(0x7f6159833000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6f000) = 0x7f6159833000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0P\\16\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0644, st_size=14560, ...&#125;) = 0mmap(NULL, 2109712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61593c0000mprotect(0x7f61593c3000, 2093056, PROT_NONE) = 0mmap(0x7f61595c2000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0x7f61595c2000close(3)                                = 0openat(AT_FDCWD, &quot;/opt/ros/melodic/lib/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/lib/x86_64-linux-gnu/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3read(3, &quot;\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0000b\\0\\0\\0\\0\\0\\0&quot;..., 832) = 832fstat(3, &#123;st_mode=S_IFREG|0755, st_size=144976, ...&#125;) = 0mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a449000mmap(NULL, 2221184, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7f61591a1000mprotect(0x7f61591bb000, 2093056, PROT_NONE) = 0mmap(0x7f61593ba000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0x7f61593ba000mmap(0x7f61593bc000, 13440, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7f61593bc000close(3)                                = 0mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f615a446000arch_prctl(ARCH_SET_FS, 0x7f615a446800) = 0mprotect(0x7f6159c1c000, 16384, PROT_READ) = 0mprotect(0x7f61593ba000, 4096, PROT_READ) = 0mprotect(0x7f61595c2000, 4096, PROT_READ) = 0mprotect(0x7f6159833000, 4096, PROT_READ) = 0mprotect(0x7f6159e29000, 4096, PROT_READ) = 0mprotect(0x7f615a031000, 4096, PROT_READ) = 0mprotect(0x7f615a257000, 4096, PROT_READ) = 0mprotect(0x55b38e8b8000, 4096, PROT_READ) = 0mprotect(0x7f615a484000, 4096, PROT_READ) = 0munmap(0x7f615a44d000, 223218)          = 0set_tid_address(0x7f615a446ad0)         = 6068set_robust_list(0x7f615a446ae0, 24)     = 0rt_sigaction(SIGRTMIN, &#123;sa_handler=0x7f61591a6cb0, sa_mask=[], sa_flags=SA_RESTORER|SA_SIGINFO, sa_restorer=0x7f61591b3980&#125;, NULL, 8) = 0rt_sigaction(SIGRT_1, &#123;sa_handler=0x7f61591a6d50, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7f61591b3980&#125;, NULL, 8) = 0rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0prlimit64(0, RLIMIT_STACK, NULL, &#123;rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY&#125;) = 0statfs(&quot;/sys/fs/selinux&quot;, 0x7ffc2d703630) = -1 ENOENT (No such file or directory)statfs(&quot;/selinux&quot;, 0x7ffc2d703630)      = -1 ENOENT (No such file or directory)brk(NULL)                               = 0x55b38eebf000brk(0x55b38eee0000)                     = 0x55b38eee0000openat(AT_FDCWD, &quot;/proc/filesystems&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0444, st_size=0, ...&#125;) = 0read(3, &quot;nodev\\tsysfs\\nnodev\\ttmpfs\\nnodev\\tbd&quot;..., 1024) = 393read(3, &quot;&quot;, 1024)                       = 0close(3)                                = 0access(&quot;/etc/selinux/config&quot;, F_OK)     = -1 ENOENT (No such file or directory)openat(AT_FDCWD, &quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=5513488, ...&#125;) = 0mmap(NULL, 5513488, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f6158c5e000close(3)                                = 0geteuid()                               = 1000ioctl(0, TCGETS, &#123;B38400 opost isig icanon echo ...&#125;) = 0stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0lstat(&quot;a&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0lstat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0geteuid()                               = 1000stat(&quot;b&quot;, &#123;st_mode=S_IFREG|0664, st_size=7, ...&#125;) = 0geteuid()                               = 1000getegid()                               = 1000getuid()                                = 1000getgid()                                = 1000access(&quot;b&quot;, W_OK)                       = 0rename(&quot;a&quot;, &quot;b&quot;)                        = 0lseek(0, 0, SEEK_CUR)                   = -1 ESPIPE (Illegal seek)close(0)                                = 0close(1)                                = 0close(2)                                = 0exit_group(0)                           = ?+++ exited with 0 +++\n\n\n动态库应用程序使用动态库过程\n\n应用程序通过 dlopen 打开 so 时，内核通过 mmap 将 so 加载到进程地址空间，对应虚拟内存区域 VMA 中的页 page\n加载器 loader 将 so 里引用的外部符号解析成真正的虚拟地址\n当 so 被 cp trunc 时，内核将旧 so 文件从虚拟内存对应物理内存中清除\n当应用程序运行到 so 中的代码时，产生缺页中断\n内核重新加载新 so\n如果文件偏移量超出新 so 地址范围，将产生 bus error\n如果新 so 依赖外部符号，此时全局符号表没有经过重新解析，将产生段错误\n如果新 so 不依赖外部符号，程序可以运行\n\n\n\n测试库文件1234567891011#include &lt;stdio.h&gt;void func(void) &#123;  printf(&quot;new lib\\n&quot;);  printf(&quot;old lib\\n&quot;);&#125;void add(void) &#123;  int a = 1, b = 2;  int c = a + b;&#125;\n测试文件12345678910111213141516171819202122232425262728293031#include &lt;dlfcn.h&gt;#include &lt;stdio.h&gt;int main() &#123;  void* handle;  void (*func)(void);  void (*add)(void);  handle = dlopen(&quot;libtest.so&quot;, RTLD_LAZY);  if (!handle) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  func = dlsym(handle, &quot;func&quot;);  if (dlerror() != NULL) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  func();  add = dlsym(handle, &quot;add&quot;);  if (dlerror() != NULL) &#123;    fprintf(stderr, &quot;%s\\n&quot;, dlerror());    return -1;  &#125;  add();  dlclose(handle);&#125;\n编译12$ gcc -fPIC -shared -o libtest.so libtest.c -g$ gcc -o use_lib use_lib.c -ldl -g\n-g 生成调试信息\n-fPIC 生成位置无关代码(Position-Independent Code)，创建共享库时允许代码在任何内存地址执行而无需修改\n报错解决，修改 LD_PRELOAD 无效12libtest.so: cannot open shared object file: No such file or directory$ export LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH\ngdb 调试：函数调用处添加断点后，在另一终端 cp 替换库文件 so，回到 gdb n 继续单步运行\n\nfunc 函数断点调试\n\n12345678910111213141516171819$ gdb use_libGNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1...Reading symbols from use_lib...done.(gdb) b 20Breakpoint 1 at 0x876: file use_lib.c, line 20.(gdb) rStarting program: /home/nolehuan/cpp/src/use_lib Breakpoint 1, main () at use_lib.c:2020\t  func();(gdb) nProgram received signal SIGSEGV, Segmentation fault.0x0000000000000536 in ?? ()(gdb) bt#0  0x0000000000000536 in ?? ()#1  0x00007ffff75dc63a in func () at libtest.c:4#2  0x000055555555487c in main () at use_lib.c:20\n\nadd 函数断点调试\n\n1234567891011121314$ gdb use_libGNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1...Reading symbols from use_lib...done.(gdb) b 27Breakpoint 1 at 0x8c7: file use_lib.c, line 27.(gdb) rStarting program: /home/nolehuan/cpp/src/use_lib old libBreakpoint 1, main () at use_lib.c:2727\t  add();(gdb) n29\t  dlclose(handle);\n结论\ncp 更新动态库，文件 inode 号不变，旧库文件被截断，重新加载至内存时，或因为文件偏移量超出新库文件地址范围产生 bus error 导致程序 core 掉，或因为动态库依赖外部符号但全局符号表没有经过重新解析产生段错误导致程序 core 掉\nmv 更新动态库，文件 inode 号改变，旧 inode 号依然存在，程序可以继续运行，必须重启服务才会加载新动态库\n\n正确做法rm + cp 或 mv + cp\nrm 时如果 ld.so 正在加载动态库，inode 不会立刻被删除，直至 ld.so 释放对动态库的引用，引用结束时才会真正删除 inode，程序不会崩溃，下次使用替换后的动态库\nmv 仅改变文件名，inode 不变，新动态库使用新 inode，动态链接器 ld.so 使用原 inode 访问旧动态库\n替换可执行程序时，系统会明令禁止 cp 操作，但系统不会阻止覆盖动态库12cp xxx xxxcp: cannot create regular file `xxx`: Text file busy\nDemand Paging 机制\n程序运行时并非所有页都加载到内存中，只有需要访问时才会动态加载，Demand Paging 要求正在运行中的程序镜像不被意外修改，因此内核会锁定程序镜像的 inode\n对于动态库而言，依靠用户态程序 ld.so 加载，无权锁定 inode\n相关内容环境变量\n\nLIBRARY_PATH 静态链接库文件搜索路径\nLD_LIBRARY_PATH 动态链接库文件搜索路径\n\n动态库 .so 与静态库 .a 同时存在时，gcc/g++ 默认链接动态库，可使用参数 -Wl,-Bstatic -lxxx 或 -Wl,-Bdynamic -lxxx 指定链接静态/动态库\n参数 -static 指定完全静态加载\n静态库加载顺序\n\ngcc -L 参数\nLIBRARY_PATH\n默认库目录\n\n动态库加载顺序\n\ngcc -L 参数\nLD_LIBRARY_PATH\n/etc/ld.so.conf 配置文件中的路径\n默认库目录\n\nldd 查看可执行程序依赖的共享库\n动态库命名：libxxxx.so.major.minor，major 主版本号，minor 副版本号 \ngcc 分阶段编译123$ gcc -E libtest.c -o libtest.i$ gcc -S libtest.i -o libtest.s$ gcc -c libtest.s -o libtest.o\n生成静态库1$ ar cqs libtest.a libtest.o\nar archivec 创建新的归档文件，已存在则覆盖q 快速追加s 构建对象索引文件，即符号表\nnm 查看库中的函数\n\nT 函数在当前库中定义\nU 函数在其它库中定义被调用\nW 当前库中定义，被其它库中的函数覆盖\n\n1234567891011121314151617181920212223242526nm libtest.so000000000000063d T add0000000000201028 B __bss_start0000000000201028 b completed.7698                 w __cxa_finalize@@GLIBC_2.2.50000000000000550 t deregister_tm_clones00000000000005e0 t __do_global_dtors_aux0000000000200e18 t __do_global_dtors_aux_fini_array_entry0000000000201020 d __dso_handle0000000000200e20 d _DYNAMIC0000000000201028 D _edata0000000000201030 B _end0000000000000660 T _fini0000000000000620 t frame_dummy0000000000200e10 t __frame_dummy_init_array_entry0000000000000738 r __FRAME_END__000000000000062a T func0000000000201000 d _GLOBAL_OFFSET_TABLE_                 w __gmon_start__0000000000000674 r __GNU_EH_FRAME_HDR0000000000000500 T _init                 w _ITM_deregisterTMCloneTable                 w _ITM_registerTMCloneTable                 U puts@@GLIBC_2.2.50000000000000590 t register_tm_clones0000000000201028 d __TMC_END__\n1234567$ nm libtest.a libtest.o:0000000000000013 T add0000000000000000 T func                 U _GLOBAL_OFFSET_TABLE_                 U puts\n参考https://developer.aliyun.com/article/6371https://www.cnblogs.com/wangliangblog/p/10766986.htmlhttps://blog.csdn.net/BHJ1119/article/details/88219896\n","slug":"linux/so","date":"2023-11-26T19:30:29.000Z","categories_index":"coding","tags_index":"cpp,linux,so","author_index":"NoleHuan"},{"id":"2b7dc717d2cad550b10ee602a360ec48","title":"daily","content":"\n2023-10-05\n\n\n  \n  日照 海滨国家森林公园 花旦蟹\n\n\n\n\n2023-10-01\n\n\n  \n  日照 莒国古城\n\n\n\n\n2023-09-29\n\n\n  \n  北京 中国网球公开赛\n\n\n\n\n2023-06-17\n\n\n  \n  北京 北京航空航天大学 学院路\n\n\n\n\n2023-05-01\n\n\n  \n  青岛 鱼山路\n\n\n\n\n2022-03-14\n\n\n  \n  北京 百度科技园\n\n\n\n\n2021-12-25\n\n\n  \n  北京 三里屯\n\n\n\n\n2021-09-01\n\n\n  \n  武汉 武汉大学\n\n\n\n\n2021-05-03\n\n\n  \n  宁波 梅山\n\n\n\n\n2020-10-05\n\n\n  \n  北京 圆明园\n\n\n\n\n2020-09-16\n\n\n  \n  北京 北京航空航天大学 沙河蓝园\n\n","slug":"daily/index","date":"2023-11-18T15:30:29.000Z","categories_index":"personal","tags_index":"daily","author_index":"NoleHuan"},{"id":"9126d7e35b9c1cf6438d81091e8f7d35","title":"resume","content":"2016.09-2017.01吉林大学 土地资源管理 学士\n\n管理学 地质学 矿物学\n\n2017.02-2020.06吉林大学 汽车服务工程 学士\n\n机械设计 汽车构造 力学 嵌入式\n保研\n\n2020.09-2023.01北京航空航天大学 车辆工程 硕士\n\n自动驾驶 深度学习 多视角几何\n\n2022.03-2022.06百度 自动驾驶技术部 算法研发实习生\n\n车道线自动化标注 图像处理\n\n2023.08-2023.11京东 轮岗\n\n技术产品经理/算法工程师/前端开发工程师\n竞品分析 多智能体路径规划\n\n2023.02-2023.12京东 智能驾驶部 嵌入式软件工程师\n\n自动驾驶系统中间件\n硬件在环自动驾驶系统性能量化分析\n\n","slug":"intro/index","date":"2023-11-18T15:30:29.000Z","categories_index":"personal","tags_index":"resume","author_index":"NoleHuan"}]